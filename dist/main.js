(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),i=t(645),a=t.n(i)()(r());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@300;400&display=swap);"]),a.push([n.id,"body, h3, p, input, button, label, h1{\n    padding: 0;\n    margin: 0;\n    font-family: 'Roboto', sans-serif;\n}\n\nbody{\n    background-color: #141010; \n    position: relative;\n}\n\n#projectAdding{\n    padding: 20px;\n    position: sticky;\n    top: 0;\n    z-index: 100;\n    background-color: #c3195d;\n\n    min-width: 700px;\n    box-shadow: 0px 10px 15px 9px rgba(0,0,0,0.1);\n    border-bottom-left-radius:  5px;\n    border-bottom-right-radius: 5px;\n}\n\n#projectForm{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    font-size: 1.2rem;\n}\n\n#projectForm > input{\n    font-size: 1rem;\n}\n\n#projectForm > button{\n    background:  #680747;\n    border: 1px solid #680747;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 20px;\n    outline: 0;\n    padding: 6px 7px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle; \n\n}\n\n#projectForm > input{\n    background-color: #680747;\n    color: white;\n    border-radius: 5px;\n}\n\n#projectForm > button:hover{\n    background-color: initial;\n  }\n\n\n#content{\n    padding-top: 10px;\n    display: grid;\n    grid-template-columns: 1fr 3fr 1fr;\n    justify-items: center;\n    gap: 3%;\n    \n}\n\n\n\n.projectNameDiv{\n   grid-column: 2/3;\n  \n   background-color:  #680747;\n   min-width: 650px;\n\n    height: 100%;\n\n    border-radius: 15px;\n    box-shadow: 0px 10px 15px -3px rgba(0,0,0,0.1);\n    /* overflow: hidden; */\n  \n}\n\n\n\n\n.projectNameDiv:hover{\n    transform: scale(1.1);\n    overflow: visible;\n    transition: transform 0.3s;\n} \n\n.projectButtons >button{\n    background: #c3195d;\n    border: 1px solid #c3195d;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 20px;\n    outline: 0;\n    padding: 6px 7px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle; \n}\n\n.projectButtons >button:hover{\n  background-color: initial;\n}\n\n.projectHeadline{\n    /* width: 100%; */\n    display: flex;\n    justify-content: space-between;\n    min-height: 3rem;\n    align-items: center;\n    padding-left: 1%;\n    padding-right: 1%;\n}\n\n\n\n.projectButtons{\n    display: flex;\n    gap: 10px;\n}\n\n.taskDiv{\n    background-color: #c3195d;\n    border-bottom-left-radius:  15px;\n    border-bottom-right-radius: 15px;\n}\n\n.currentTasks{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n\n\n\n.taskOptions{\n    display: flex;\n    gap: 10px;\n\n    padding: 10px;\n    max-height: 2rem;\n    align-items: center;\n    /* border: solid 1px; */\n    box-shadow: 0px 10px 15px 9px rgba(0,0,0,0.1);    /* height: clamp(30px, 0.5rem, 4rem); */\n}\n\n.taskOptions > *{\n    max-height: 2rem;\n}\n\n.taskOptions > input, select{\n    background-color: #680747;\n    color: white;\n    border-radius: 5px;\n}\n\n\n.taskOptions > button{\n    background:  #680747;\n    border: 1px solid #680747;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 20px;\n    outline: 0;\n    padding: 6px 7px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle; \n}\n\n.taskOptions > button:hover{\n    background-color: initial;\n  }\n\n.taskParaDiv{\n    margin-top: 10px;\n    display: flex;\n    gap: 2%;\n    padding: 5px;\n    flex-direction: column;\n    flex-grow: 1; \n\n}\n\n.taskButtonDiv{\n    display: flex;\n    gap: 2%;\n    padding: 10px;\n}\n\n.taskButtonDiv > button{\n    background:  #680747;\n    border: 1px solid #680747;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 20px;\n    outline: 0;\n    padding: 6px 7px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle; \n}\n\n.taskButtonDiv > button:hover{\n    background-color: initial;\n  }\n\n  .complete {\n    background-color: rgb(34, 128, 34);\n    transition: background-color 0.3s ease-in; /* Adjust the duration and timing function as needed */\n}\n\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,UAAU;IACV,SAAS;IACT,iCAAiC;AACrC;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;AACtB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,MAAM;IACN,YAAY;IACZ,yBAAyB;;IAEzB,gBAAgB;IAChB,6CAA6C;IAC7C,+BAA+B;IAC/B,+BAA+B;AACnC;;AAEA;IACI,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,gCAAgC;;IAEhC,iBAAiB;AACrB;;AAEA;IACI,eAAe;AACnB;;AAEA;IACI,oBAAoB;IACpB,yBAAyB;IACzB,kBAAkB;IAClB,0CAA0C;IAC1C,sBAAsB;IACtB,cAAc;IACd,eAAe;IACf,qBAAqB;IACrB,iCAAiC;IACjC,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,UAAU;IACV,gBAAgB;IAChB,kBAAkB;IAClB,kCAAkC;IAClC,oBAAoB;IACpB,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;IAC1B,sBAAsB;;AAE1B;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;AACtB;;AAEA;IACI,yBAAyB;EAC3B;;;AAGF;IACI,iBAAiB;IACjB,aAAa;IACb,kCAAkC;IAClC,qBAAqB;IACrB,OAAO;;AAEX;;;;AAIA;GACG,gBAAgB;;GAEhB,0BAA0B;GAC1B,gBAAgB;;IAEf,YAAY;;IAEZ,mBAAmB;IACnB,8CAA8C;IAC9C,sBAAsB;;AAE1B;;;;;AAKA;IACI,qBAAqB;IACrB,iBAAiB;IACjB,0BAA0B;AAC9B;;AAEA;IACI,mBAAmB;IACnB,yBAAyB;IACzB,kBAAkB;IAClB,0CAA0C;IAC1C,sBAAsB;IACtB,cAAc;IACd,eAAe;IACf,qBAAqB;IACrB,iCAAiC;IACjC,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,UAAU;IACV,gBAAgB;IAChB,kBAAkB;IAClB,kCAAkC;IAClC,oBAAoB;IACpB,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;IAC1B,sBAAsB;AAC1B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;IACI,iBAAiB;IACjB,aAAa;IACb,8BAA8B;IAC9B,gBAAgB;IAChB,mBAAmB;IACnB,gBAAgB;IAChB,iBAAiB;AACrB;;;;AAIA;IACI,aAAa;IACb,SAAS;AACb;;AAEA;IACI,yBAAyB;IACzB,gCAAgC;IAChC,gCAAgC;AACpC;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;AACvB;;;;;AAKA;IACI,aAAa;IACb,SAAS;;IAET,aAAa;IACb,gBAAgB;IAChB,mBAAmB;IACnB,uBAAuB;IACvB,6CAA6C,KAAK,uCAAuC;AAC7F;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;IACzB,YAAY;IACZ,kBAAkB;AACtB;;;AAGA;IACI,oBAAoB;IACpB,yBAAyB;IACzB,kBAAkB;IAClB,0CAA0C;IAC1C,sBAAsB;IACtB,cAAc;IACd,eAAe;IACf,qBAAqB;IACrB,iCAAiC;IACjC,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,UAAU;IACV,gBAAgB;IAChB,kBAAkB;IAClB,kCAAkC;IAClC,oBAAoB;IACpB,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;IAC1B,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;EAC3B;;AAEF;IACI,gBAAgB;IAChB,aAAa;IACb,OAAO;IACP,YAAY;IACZ,sBAAsB;IACtB,YAAY;;AAEhB;;AAEA;IACI,aAAa;IACb,OAAO;IACP,aAAa;AACjB;;AAEA;IACI,oBAAoB;IACpB,yBAAyB;IACzB,kBAAkB;IAClB,0CAA0C;IAC1C,sBAAsB;IACtB,cAAc;IACd,eAAe;IACf,qBAAqB;IACrB,iCAAiC;IACjC,eAAe;IACf,gBAAgB;IAChB,iBAAiB;IACjB,gBAAgB;IAChB,UAAU;IACV,gBAAgB;IAChB,kBAAkB;IAClB,kCAAkC;IAClC,oBAAoB;IACpB,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;IAC1B,sBAAsB;AAC1B;;AAEA;IACI,yBAAyB;EAC3B;;EAEA;IACE,kCAAkC;IAClC,yCAAyC,EAAE,sDAAsD;AACrG",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400&display=swap');\n\nbody, h3, p, input, button, label, h1{\n    padding: 0;\n    margin: 0;\n    font-family: 'Roboto', sans-serif;\n}\n\nbody{\n    background-color: #141010; \n    position: relative;\n}\n\n#projectAdding{\n    padding: 20px;\n    position: sticky;\n    top: 0;\n    z-index: 100;\n    background-color: #c3195d;\n\n    min-width: 700px;\n    box-shadow: 0px 10px 15px 9px rgba(0,0,0,0.1);\n    border-bottom-left-radius:  5px;\n    border-bottom-right-radius: 5px;\n}\n\n#projectForm{\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    font-size: 1.2rem;\n}\n\n#projectForm > input{\n    font-size: 1rem;\n}\n\n#projectForm > button{\n    background:  #680747;\n    border: 1px solid #680747;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 20px;\n    outline: 0;\n    padding: 6px 7px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle; \n\n}\n\n#projectForm > input{\n    background-color: #680747;\n    color: white;\n    border-radius: 5px;\n}\n\n#projectForm > button:hover{\n    background-color: initial;\n  }\n\n\n#content{\n    padding-top: 10px;\n    display: grid;\n    grid-template-columns: 1fr 3fr 1fr;\n    justify-items: center;\n    gap: 3%;\n    \n}\n\n\n\n.projectNameDiv{\n   grid-column: 2/3;\n  \n   background-color:  #680747;\n   min-width: 650px;\n\n    height: 100%;\n\n    border-radius: 15px;\n    box-shadow: 0px 10px 15px -3px rgba(0,0,0,0.1);\n    /* overflow: hidden; */\n  \n}\n\n\n\n\n.projectNameDiv:hover{\n    transform: scale(1.1);\n    overflow: visible;\n    transition: transform 0.3s;\n} \n\n.projectButtons >button{\n    background: #c3195d;\n    border: 1px solid #c3195d;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 20px;\n    outline: 0;\n    padding: 6px 7px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle; \n}\n\n.projectButtons >button:hover{\n  background-color: initial;\n}\n\n.projectHeadline{\n    /* width: 100%; */\n    display: flex;\n    justify-content: space-between;\n    min-height: 3rem;\n    align-items: center;\n    padding-left: 1%;\n    padding-right: 1%;\n}\n\n\n\n.projectButtons{\n    display: flex;\n    gap: 10px;\n}\n\n.taskDiv{\n    background-color: #c3195d;\n    border-bottom-left-radius:  15px;\n    border-bottom-right-radius: 15px;\n}\n\n.currentTasks{\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n\n\n\n.taskOptions{\n    display: flex;\n    gap: 10px;\n\n    padding: 10px;\n    max-height: 2rem;\n    align-items: center;\n    /* border: solid 1px; */\n    box-shadow: 0px 10px 15px 9px rgba(0,0,0,0.1);    /* height: clamp(30px, 0.5rem, 4rem); */\n}\n\n.taskOptions > *{\n    max-height: 2rem;\n}\n\n.taskOptions > input, select{\n    background-color: #680747;\n    color: white;\n    border-radius: 5px;\n}\n\n\n.taskOptions > button{\n    background:  #680747;\n    border: 1px solid #680747;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 20px;\n    outline: 0;\n    padding: 6px 7px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle; \n}\n\n.taskOptions > button:hover{\n    background-color: initial;\n  }\n\n.taskParaDiv{\n    margin-top: 10px;\n    display: flex;\n    gap: 2%;\n    padding: 5px;\n    flex-direction: column;\n    flex-grow: 1; \n\n}\n\n.taskButtonDiv{\n    display: flex;\n    gap: 2%;\n    padding: 10px;\n}\n\n.taskButtonDiv > button{\n    background:  #680747;\n    border: 1px solid #680747;\n    border-radius: 6px;\n    box-shadow: rgba(0, 0, 0, 0.1) 1px 2px 4px;\n    box-sizing: border-box;\n    color: #FFFFFF;\n    cursor: pointer;\n    display: inline-block;\n    font-family: 'Roboto', sans-serif;\n    font-size: 1rem;\n    font-weight: 800;\n    line-height: 16px;\n    min-height: 20px;\n    outline: 0;\n    padding: 6px 7px;\n    text-align: center;\n    text-rendering: geometricprecision;\n    text-transform: none;\n    user-select: none;\n    -webkit-user-select: none;\n    touch-action: manipulation;\n    vertical-align: middle; \n}\n\n.taskButtonDiv > button:hover{\n    background-color: initial;\n  }\n\n  .complete {\n    background-color: rgb(34, 128, 34);\n    transition: background-color 0.3s ease-in; /* Adjust the duration and timing function as needed */\n}\n\n"],sourceRoot:""}]);const s=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],A=o.base?c[0]+o.base:c[0],l=i[A]||0,d="".concat(A," ").concat(l);i[A]=l+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var g=r(u,o);o.byIndex=s,e.splice(s,0,{identifier:d,updater:g,references:1})}a.push(d)}return a}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var i=o(n=n||[],r=r||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var c=o(n,r),A=0;A<i.length;A++){var l=t(i[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var i=e[o]={id:o,exports:{}};return n[o](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{class n{constructor(n){this.projectName=n,this.task=[]}addTask(n){this.task.push(n)}displayTask(n){console.log(this.task[n-1])}getDescription(){return this.task.map((n=>n.description))}getPrio(){return this.task.map((n=>n.priority))}getDueDate(){return this.task.map((n=>n.dueDate))}getID(){return console.log(this.task.map((n=>n.id)))}}function e(){const n=localStorage.getItem("Projects");return n?JSON.parse(n):[]}function o(n){const e=JSON.parse(localStorage.getItem("Projects"))||[];console.log(JSON.stringify(e)),console.log(e.length);for(let t=0;t<e.length;t++)e[t].projectName===n.projectName&&(console.log("deleting this"),e.splice(t,1),localStorage.setItem("Projects",JSON.stringify(e)),console.log(e))}function r(n,e){const t=JSON.parse(localStorage.getItem("Projects"))||[];for(let o=0;o<t.length;o++)t[o].projectName===n.projectName&&(t[o].projectName=e,console.log(t[o].projectName),localStorage.setItem("Projects",JSON.stringify(t)))}function i(n,e){let t=JSON.parse(localStorage.getItem("Projects"))||[];for(let o=0;o<t.length;o++)if(t[o].projectName===e.projectName){const e=t[o].task.findIndex((e=>e.description===n.description));-1!==e?(t[o].task.splice(e,1),console.log("Updated tasks:",t[o].task)):console.log("Task not found:",n)}else console.log("No match for:",e.projectName);localStorage.setItem("Projects",JSON.stringify(t))}function a(n,e,t){let o=JSON.parse(localStorage.getItem("Projects"))||[];for(let r=0;r<o.length;r++)if(o[r].projectName===e.projectName)for(let e=0;e<o[r].task.length;e++)o[r].task[e].description===n.description&&(console.log("match"),o[r].task[e].description=t,localStorage.setItem("Projects",JSON.stringify(o)))}function s(n,e,t,o){let r=JSON.parse(localStorage.getItem("Projects"))||[];for(let i=0;i<r.length;i++)if(r[i].projectName===e.projectName)for(let e=0;e<r[i].task.length;e++)console.log("matching this task and this task"),console.log(r[i].task[e]),console.log(n),r[i].task[e].description===n.description&&(console.log("match"),r[i].task[e].completed=t,localStorage.setItem("Projects",JSON.stringify(r)),console.log("task div"),console.log(o),!0===t&&(console.log("true adding"),o.classList.add("complete")),!1===t&&(console.log("false removing"),o.classList.remove("complete")))}function c(n,t,o,r){e();const i=document.createElement("button");return i.innerHTML="Mark as complete",i.addEventListener("click",(()=>{for(let e=0;e<n.task.length;e++)if(n.task[e].id==t){if(1==n.task[e].completed){const t=!1;s(n.task[e],n,t,o),n.task[e].completed=!1,o.classList.remove("complete");break}if(0==n.task[e].completed){const t=!0;s(n.task[e],n,t,o),n.task[e].completed=!0,o.classList.add("complete");break}}})),i}function A(n,e,t,o){const r=document.createElement("button");return r.classList.add("deleteTask"),r.innerHTML="Delete Task",r.addEventListener("click",(()=>{for(let t=0;t<n.task.length;t++)n.task[t].id==e&&(i(n.task[t],n),n.task.splice(t,1));o.removeChild(t)})),r}function l(n,e,t,o,r,i){const s=document.createElement("button");return s.innerHTML="Edit Name",s.addEventListener("click",(()=>{let o=prompt("New Task name:");for(let r=0;r<n.task.length;r++)n.task[r].id==e&&(a(n.task[r],n,o),n.task[r].description=o,t.innerHTML=`<div class="taskParaDiv"><p>Task name: <b>${n.getDescription()[r]}</b></p>\n                <p>Priority: <b>${n.getPrio()[r]}</b></p>\n                <p>Due: <b>${n.getDueDate()[r]}</b></p></div>`);console.log(n),t.appendChild(i)})),s}function d(n){let e=0,t=0;const o=document.createElement("div"),r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("name","setProperty"),r.setAttribute("id","setProperty");const i=document.createElement("label");i.setAttribute("for","setProperty"),i.innerHTML="Task Name:",o.classList.add("taskDiv");const a=document.createElement("select");a.setAttribute("name","setPrio"),a.setAttribute("id","setPrio");const s=document.createElement("option");s.setAttribute("value","High");const d=document.createTextNode("High"),p=document.createElement("option");p.setAttribute("value","Medium");const u=document.createTextNode("Medium"),g=document.createElement("option");g.setAttribute("value","Low");const m=document.createTextNode("Low");s.appendChild(d),p.appendChild(u),g.appendChild(m),a.appendChild(s),a.appendChild(p),a.appendChild(g);const B=document.createElement("label");B.setAttribute("for","setPrio"),B.innerHTML="Priority: ";const C=document.createElement("input");C.setAttribute("type","date"),C.setAttribute("name","taskDueDate"),C.setAttribute("id","taskDueDate"),C.setAttribute("required","");const h=document.createElement("label");h.setAttribute("for","taskDueDate"),h.innerHTML="Due: ";const b=document.createElement("button");b.innerHTML="Add Task";const f=document.createElement("div");return f.classList.add("taskOptions"),console.log("in tasks"),console.log(n),b.addEventListener("click",(()=>{const i=r.value,s=a.value,d=C.value;if(""==i||""==s||""==d)return alert("Fill out all the fields");n.addTask({description:i,priority:s,dueDate:d,completed:!1,id:e++}),t++,function(n,e){let t=JSON.parse(localStorage.getItem("Projects"))||[];for(let o=0;o<t.length;o++)t[o].projectName===e.projectName?t[o].task=n:console.log("we dont match");localStorage.setItem("Projects",JSON.stringify(t))}(n.task,n);const p=document.createElement("div");p.classList.add("currentTasks"),p.setAttribute("data-id",t-1),r.value="",console.log(n);const u=p.dataset.id;console.log(u+"for currenttaskDiv"),p.innerHTML=`<div class="taskParaDiv"><p>Task name: <b>${n.getDescription()[n.task.length-1]}</b></p>\n            <p>Priority: <b>${n.getPrio()[n.task.length-1]}</b></p>\n            <p>Due: <b>${n.getDueDate()[n.task.length-1]}</b></p></div>`;const g=document.createElement("div");g.classList.add("taskButtonDiv");const m=c(n,u,p),B=A(n,u,p,o),h=l(n,u,p,0,0,g);o.appendChild(p),p.appendChild(g),g.appendChild(m),g.appendChild(h),g.appendChild(B)})),f.appendChild(i),f.appendChild(r),f.appendChild(B),f.appendChild(a),f.appendChild(h),f.appendChild(C),f.appendChild(b),o.appendChild(f),o}function p(n){let e=JSON.parse(localStorage.getItem("Projects"))||[];if(e.length>0){for(let t=0;t<e.length;t++)if(e[t].projectName===n)return n;return e[e.length-1].projectName}return n}var u=t(379),g=t.n(u),m=t(795),B=t.n(m),C=t(569),h=t.n(C),b=t(565),f=t.n(b),x=t(216),I=t.n(x),k=t(589),v=t.n(k),y=t(426),j={};j.styleTagTransform=v(),j.setAttributes=f(),j.insert=h().bind(null,"head"),j.domAPI=B(),j.insertStyleElement=I(),g()(y.Z,j),y.Z&&y.Z.locals&&y.Z.locals;const E=document.getElementById("content"),w=document.getElementById("projectName"),F=document.getElementById("submit");window.onload=function(){!function(n){const t=e();0===t.length&&(t.push(n),localStorage.setItem("Projects",JSON.stringify(t)))}(new n("Default Project")),e().forEach((e=>{const t=new n(e.projectName);e.task.forEach((n=>{t.addTask({description:n.description,priority:n.priority,dueDate:n.dueDate,completed:n.completed,id:n.id+100})})),console.log("after tasks"),console.log(t),function(n){console.log("here"),console.log(n);const e=document.createElement("div");e.classList.add("projectNameDiv");const t=document.createElement("div");t.classList.add("projectHeadline");const i=document.createElement("div");i.classList.add("projectButtons");const a=document.createElement("h3");a.innerHTML=`Project name: ${p(n.projectName)}`;const s=d(n),u=document.createElement("button");u.innerHTML="Delete Project";const g=document.createElement("button");g.innerHTML="Edit Project",e.appendChild(t),t.appendChild(a),t.appendChild(i),i.appendChild(u),i.appendChild(g),e.appendChild(s),n.task.forEach((e=>{const t=document.createElement("div");t.classList.add("taskButtonDiv");const o=document.createElement("div");o.classList.add("currentTasks"),o.setAttribute("data-id",e.id);const r=o.dataset.id;!0===e.completed&&(console.log("yea this is done"),o.classList.add("complete")),o.innerHTML=`\n            <div class="taskParaDiv"><p>Task name: <b>${e.description}</b></p>\n            <p>Priority: <b>${e.priority}</b></p>\n            <p>Due: <b>${e.dueDate}</b></p></div>`;const i=c(n,r,o),a=A(n,r,o,s),d=l(n,r,o);s.appendChild(o),o.appendChild(t),t.appendChild(i),t.appendChild(d),t.appendChild(a)})),u.addEventListener("click",(()=>{E.removeChild(e),o(n)})),g.addEventListener("click",(()=>{let e=prompt("Enter new project name:");r(n,e),a.innerHTML=`Project name: ${p(e)}`})),E.appendChild(e)}(t)}))},F.addEventListener("click",(()=>{const e=document.createElement("div");e.classList.add("projectNameDiv");const t=document.createElement("div");t.classList.add("projectHeadline");const i=document.createElement("div");i.classList.add("projectButtons");const a=document.createElement("h3");let s=w.value,c=new n(s);!1===function(n){let e=JSON.parse(localStorage.getItem("Projects"))||[];return e.find((e=>e.projectName===n.projectName))?(alert("Names are the same"),!0):(e.push(n),localStorage.setItem("Projects",JSON.stringify(e)),console.log("Project added successfully"),!1)}(c)&&(E.appendChild(e),JSON.parse(localStorage.getItem("Projects"))),a.innerHTML="Project name: "+p(s);const A=d(c),l=document.createElement("button");l.innerHTML="Delete Project";const u=document.createElement("button");u.innerHTML="Edit Project",e.appendChild(t),t.appendChild(a),t.appendChild(i),i.appendChild(l),i.appendChild(u),e.appendChild(A),l.addEventListener("click",(()=>{E.removeChild(e),o(c)})),u.addEventListener("click",(()=>{let n=prompt("enter new project name:");r(c,n),console.log(n),s=n,c.projectName=s,a.innerHTML=`Project name is: ${s}`,t.appendChild(i)})),w.value="",console.log(c)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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WUFBWXlJLEdBQy9CQSxFQUFrQnpJLFlBQVkySSxHQUM5QkYsRUFBa0J6SSxZQUFZNEksR0FDOUJMLEVBQWV2SSxZQUFZMEYsR0FFM0JpRCxFQUFpQm5ELGlCQUFpQixTQUFRLEtBQ3RDNUosRUFBUWdGLFlBQVkySCxHQUNwQjFFLEVBQWNzQixFQUFnQixJQUdsQ3lELEVBQWVwRCxpQkFBaUIsU0FBUyxLQUNyQyxJQUFJckIsRUFBWTZCLE9BQU8sMkJBQ3ZCL0IsRUFBa0JrQixFQUFrQmhCLEdBQ3BDcEIsUUFBUUMsSUFBSW1CLEdBQ1p5RCxFQUFZekQsRUFDWmdCLEVBQWlCekMsWUFBY2tGLEVBRS9CYyxFQUFVbkQsVUFBWSxvQkFBb0JxQyxJQUMxQ1ksRUFBbUJ4SSxZQUFZeUksRUFBaUIsSUFHcERWLEVBQWdCbEQsTUFBUSxHQUN4QjlCLFFBQVFDLElBQUltQyxFQUFpQixHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby10b3AvLi9zcmMvc3R5bGUuY3NzIiwid2VicGFjazovL3RvZG8tdG9wLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvLXRvcC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RvZG8tdG9wLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3RvZG8tdG9wLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLXRvcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90b2RvLXRvcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly90b2RvLXRvcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG8tdG9wLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdG9kby10b3Avd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kby10b3Avd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby10b3Avd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG8tdG9wL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kby10b3Avd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG8tdG9wLy4vc3JjL2NvbnN0cnVjdG9yLmpzIiwid2VicGFjazovL3RvZG8tdG9wLy4vc3JjL3N0b3JhZ2UuanMiLCJ3ZWJwYWNrOi8vdG9kby10b3AvLi9zcmMvYnV0dG9ucy5qcyIsIndlYnBhY2s6Ly90b2RvLXRvcC8uL3NyYy90YXNrcy5qcyIsIndlYnBhY2s6Ly90b2RvLXRvcC8uL3NyYy9kaXNwbGF5LmpzIiwid2VicGFjazovL3RvZG8tdG9wLy4vc3JjL3N0eWxlLmNzcz83MTYzIiwid2VicGFjazovL3RvZG8tdG9wLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBpbXBvcnQgdXJsKGh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9Um9ib3RvOndnaHRAMzAwOzQwMCZkaXNwbGF5PXN3YXApO1wiXSk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYGJvZHksIGgzLCBwLCBpbnB1dCwgYnV0dG9uLCBsYWJlbCwgaDF7XG4gICAgcGFkZGluZzogMDtcbiAgICBtYXJnaW46IDA7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xufVxuXG5ib2R5e1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxNDEwMTA7IFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuI3Byb2plY3RBZGRpbmd7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgIHRvcDogMDtcbiAgICB6LWluZGV4OiAxMDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2MzMTk1ZDtcblxuICAgIG1pbi13aWR0aDogNzAwcHg7XG4gICAgYm94LXNoYWRvdzogMHB4IDEwcHggMTVweCA5cHggcmdiYSgwLDAsMCwwLjEpO1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6ICA1cHg7XG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDVweDtcbn1cblxuI3Byb2plY3RGb3Jte1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDUwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG5cbiAgICBmb250LXNpemU6IDEuMnJlbTtcbn1cblxuI3Byb2plY3RGb3JtID4gaW5wdXR7XG4gICAgZm9udC1zaXplOiAxcmVtO1xufVxuXG4jcHJvamVjdEZvcm0gPiBidXR0b257XG4gICAgYmFja2dyb3VuZDogICM2ODA3NDc7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzY4MDc0NztcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjEpIDFweCAycHggNHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgbWluLWhlaWdodDogMjBweDtcbiAgICBvdXRsaW5lOiAwO1xuICAgIHBhZGRpbmc6IDZweCA3cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtcmVuZGVyaW5nOiBnZW9tZXRyaWNwcmVjaXNpb247XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBcblxufVxuXG4jcHJvamVjdEZvcm0gPiBpbnB1dHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjgwNzQ3O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XG59XG5cbiNwcm9qZWN0Rm9ybSA+IGJ1dHRvbjpob3ZlcntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBpbml0aWFsO1xuICB9XG5cblxuI2NvbnRlbnR7XG4gICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAzZnIgMWZyO1xuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcbiAgICBnYXA6IDMlO1xuICAgIFxufVxuXG5cblxuLnByb2plY3ROYW1lRGl2e1xuICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgXG4gICBiYWNrZ3JvdW5kLWNvbG9yOiAgIzY4MDc0NztcbiAgIG1pbi13aWR0aDogNjUwcHg7XG5cbiAgICBoZWlnaHQ6IDEwMCU7XG5cbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICAgIGJveC1zaGFkb3c6IDBweCAxMHB4IDE1cHggLTNweCByZ2JhKDAsMCwwLDAuMSk7XG4gICAgLyogb3ZlcmZsb3c6IGhpZGRlbjsgKi9cbiAgXG59XG5cblxuXG5cbi5wcm9qZWN0TmFtZURpdjpob3ZlcntcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7XG59IFxuXG4ucHJvamVjdEJ1dHRvbnMgPmJ1dHRvbntcbiAgICBiYWNrZ3JvdW5kOiAjYzMxOTVkO1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjMzE5NWQ7XG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xuICAgIGJveC1zaGFkb3c6IHJnYmEoMCwgMCwgMCwgMC4xKSAxcHggMnB4IDRweDtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBmb250LXdlaWdodDogODAwO1xuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xuICAgIG1pbi1oZWlnaHQ6IDIwcHg7XG4gICAgb3V0bGluZTogMDtcbiAgICBwYWRkaW5nOiA2cHggN3B4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LXJlbmRlcmluZzogZ2VvbWV0cmljcHJlY2lzaW9uO1xuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xuICAgIHVzZXItc2VsZWN0OiBub25lO1xuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgXG59XG5cbi5wcm9qZWN0QnV0dG9ucyA+YnV0dG9uOmhvdmVye1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbml0aWFsO1xufVxuXG4ucHJvamVjdEhlYWRsaW5le1xuICAgIC8qIHdpZHRoOiAxMDAlOyAqL1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIG1pbi1oZWlnaHQ6IDNyZW07XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBwYWRkaW5nLWxlZnQ6IDElO1xuICAgIHBhZGRpbmctcmlnaHQ6IDElO1xufVxuXG5cblxuLnByb2plY3RCdXR0b25ze1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiAxMHB4O1xufVxuXG4udGFza0RpdntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzMxOTVkO1xuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6ICAxNXB4O1xuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAxNXB4O1xufVxuXG4uY3VycmVudFRhc2tze1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cblxuXG5cbi50YXNrT3B0aW9uc3tcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMTBweDtcblxuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgbWF4LWhlaWdodDogMnJlbTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIC8qIGJvcmRlcjogc29saWQgMXB4OyAqL1xuICAgIGJveC1zaGFkb3c6IDBweCAxMHB4IDE1cHggOXB4IHJnYmEoMCwwLDAsMC4xKTsgICAgLyogaGVpZ2h0OiBjbGFtcCgzMHB4LCAwLjVyZW0sIDRyZW0pOyAqL1xufVxuXG4udGFza09wdGlvbnMgPiAqe1xuICAgIG1heC1oZWlnaHQ6IDJyZW07XG59XG5cbi50YXNrT3B0aW9ucyA+IGlucHV0LCBzZWxlY3R7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzY4MDc0NztcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xufVxuXG5cbi50YXNrT3B0aW9ucyA+IGJ1dHRvbntcbiAgICBiYWNrZ3JvdW5kOiAgIzY4MDc0NztcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjNjgwNzQ3O1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMSkgMXB4IDJweCA0cHg7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDFyZW07XG4gICAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgICBsaW5lLWhlaWdodDogMTZweDtcbiAgICBtaW4taGVpZ2h0OiAyMHB4O1xuICAgIG91dGxpbmU6IDA7XG4gICAgcGFkZGluZzogNnB4IDdweDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgdGV4dC1yZW5kZXJpbmc6IGdlb21ldHJpY3ByZWNpc2lvbjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcbiAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xuICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IFxufVxuXG4udGFza09wdGlvbnMgPiBidXR0b246aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbDtcbiAgfVxuXG4udGFza1BhcmFEaXZ7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMiU7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC1ncm93OiAxOyBcblxufVxuXG4udGFza0J1dHRvbkRpdntcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGdhcDogMiU7XG4gICAgcGFkZGluZzogMTBweDtcbn1cblxuLnRhc2tCdXR0b25EaXYgPiBidXR0b257XG4gICAgYmFja2dyb3VuZDogICM2ODA3NDc7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzY4MDc0NztcbiAgICBib3JkZXItcmFkaXVzOiA2cHg7XG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjEpIDFweCAycHggNHB4O1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgY29sb3I6ICNGRkZGRkY7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XG4gICAgZm9udC1zaXplOiAxcmVtO1xuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XG4gICAgbGluZS1oZWlnaHQ6IDE2cHg7XG4gICAgbWluLWhlaWdodDogMjBweDtcbiAgICBvdXRsaW5lOiAwO1xuICAgIHBhZGRpbmc6IDZweCA3cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHRleHQtcmVuZGVyaW5nOiBnZW9tZXRyaWNwcmVjaXNpb247XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBcbn1cblxuLnRhc2tCdXR0b25EaXYgPiBidXR0b246aG92ZXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbDtcbiAgfVxuXG4gIC5jb21wbGV0ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDM0LCAxMjgsIDM0KTtcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbjsgLyogQWRqdXN0IHRoZSBkdXJhdGlvbiBhbmQgdGltaW5nIGZ1bmN0aW9uIGFzIG5lZWRlZCAqL1xufVxuXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZS5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBRUE7SUFDSSxVQUFVO0lBQ1YsU0FBUztJQUNULGlDQUFpQztBQUNyQzs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLE1BQU07SUFDTixZQUFZO0lBQ1oseUJBQXlCOztJQUV6QixnQkFBZ0I7SUFDaEIsNkNBQTZDO0lBQzdDLCtCQUErQjtJQUMvQiwrQkFBK0I7QUFDbkM7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxnQ0FBZ0M7O0lBRWhDLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxvQkFBb0I7SUFDcEIseUJBQXlCO0lBQ3pCLGtCQUFrQjtJQUNsQiwwQ0FBMEM7SUFDMUMsc0JBQXNCO0lBQ3RCLGNBQWM7SUFDZCxlQUFlO0lBQ2YscUJBQXFCO0lBQ3JCLGlDQUFpQztJQUNq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Z0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGtDQUFrQztJQUNsQyxvQkFBb0I7SUFDcEIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QiwwQkFBMEI7SUFDMUIsc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0kseUJBQXlCO0VBQzNCOztFQUVBO0lBQ0Usa0NBQWtDO0lBQ2xDLHlDQUF5QyxFQUFFLHNEQUFzRDtBQUNyR1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86d2dodEAzMDA7NDAwJmRpc3BsYXk9c3dhcCcpO1xcblxcbmJvZHksIGgzLCBwLCBpbnB1dCwgYnV0dG9uLCBsYWJlbCwgaDF7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xcbn1cXG5cXG5ib2R5e1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTQxMDEwOyBcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbn1cXG5cXG4jcHJvamVjdEFkZGluZ3tcXG4gICAgcGFkZGluZzogMjBweDtcXG4gICAgcG9zaXRpb246IHN0aWNreTtcXG4gICAgdG9wOiAwO1xcbiAgICB6LWluZGV4OiAxMDA7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjMzE5NWQ7XFxuXFxuICAgIG1pbi13aWR0aDogNzAwcHg7XFxuICAgIGJveC1zaGFkb3c6IDBweCAxMHB4IDE1cHggOXB4IHJnYmEoMCwwLDAsMC4xKTtcXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogIDVweDtcXG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDVweDtcXG59XFxuXFxuI3Byb2plY3RGb3Jte1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogNTAlO1xcbiAgICBsZWZ0OiA1MCU7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcblxcbiAgICBmb250LXNpemU6IDEuMnJlbTtcXG59XFxuXFxuI3Byb2plY3RGb3JtID4gaW5wdXR7XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuI3Byb2plY3RGb3JtID4gYnV0dG9ue1xcbiAgICBiYWNrZ3JvdW5kOiAgIzY4MDc0NztcXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzY4MDc0NztcXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMSkgMXB4IDJweCA0cHg7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIGNvbG9yOiAjRkZGRkZGO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xcbiAgICBmb250LXNpemU6IDFyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XFxuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xcbiAgICBtaW4taGVpZ2h0OiAyMHB4O1xcbiAgICBvdXRsaW5lOiAwO1xcbiAgICBwYWRkaW5nOiA2cHggN3B4O1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIHRleHQtcmVuZGVyaW5nOiBnZW9tZXRyaWNwcmVjaXNpb247XFxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XFxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IFxcblxcbn1cXG5cXG4jcHJvamVjdEZvcm0gPiBpbnB1dHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzY4MDc0NztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XFxufVxcblxcbiNwcm9qZWN0Rm9ybSA+IGJ1dHRvbjpob3ZlcntcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogaW5pdGlhbDtcXG4gIH1cXG5cXG5cXG4jY29udGVudHtcXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDNmciAxZnI7XFxuICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAzJTtcXG4gICAgXFxufVxcblxcblxcblxcbi5wcm9qZWN0TmFtZURpdntcXG4gICBncmlkLWNvbHVtbjogMi8zO1xcbiAgXFxuICAgYmFja2dyb3VuZC1jb2xvcjogICM2ODA3NDc7XFxuICAgbWluLXdpZHRoOiA2NTBweDtcXG5cXG4gICAgaGVpZ2h0OiAxMDAlO1xcblxcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xcbiAgICBib3gtc2hhZG93OiAwcHggMTBweCAxNXB4IC0zcHggcmdiYSgwLDAsMCwwLjEpO1xcbiAgICAvKiBvdmVyZmxvdzogaGlkZGVuOyAqL1xcbiAgXFxufVxcblxcblxcblxcblxcbi5wcm9qZWN0TmFtZURpdjpob3ZlcntcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xcbiAgICBvdmVyZmxvdzogdmlzaWJsZTtcXG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3M7XFxufSBcXG5cXG4ucHJvamVjdEJ1dHRvbnMgPmJ1dHRvbntcXG4gICAgYmFja2dyb3VuZDogI2MzMTk1ZDtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2MzMTk1ZDtcXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMSkgMXB4IDJweCA0cHg7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIGNvbG9yOiAjRkZGRkZGO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xcbiAgICBmb250LXNpemU6IDFyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XFxuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xcbiAgICBtaW4taGVpZ2h0OiAyMHB4O1xcbiAgICBvdXRsaW5lOiAwO1xcbiAgICBwYWRkaW5nOiA2cHggN3B4O1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIHRleHQtcmVuZGVyaW5nOiBnZW9tZXRyaWNwcmVjaXNpb247XFxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XFxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IFxcbn1cXG5cXG4ucHJvamVjdEJ1dHRvbnMgPmJ1dHRvbjpob3ZlcntcXG4gIGJhY2tncm91bmQtY29sb3I6IGluaXRpYWw7XFxufVxcblxcbi5wcm9qZWN0SGVhZGxpbmV7XFxuICAgIC8qIHdpZHRoOiAxMDAlOyAqL1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIG1pbi1oZWlnaHQ6IDNyZW07XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIHBhZGRpbmctbGVmdDogMSU7XFxuICAgIHBhZGRpbmctcmlnaHQ6IDElO1xcbn1cXG5cXG5cXG5cXG4ucHJvamVjdEJ1dHRvbnN7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMTBweDtcXG59XFxuXFxuLnRhc2tEaXZ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNjMzE5NWQ7XFxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6ICAxNXB4O1xcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTVweDtcXG59XFxuXFxuLmN1cnJlbnRUYXNrc3tcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG5cXG5cXG5cXG4udGFza09wdGlvbnN7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMTBweDtcXG5cXG4gICAgcGFkZGluZzogMTBweDtcXG4gICAgbWF4LWhlaWdodDogMnJlbTtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgLyogYm9yZGVyOiBzb2xpZCAxcHg7ICovXFxuICAgIGJveC1zaGFkb3c6IDBweCAxMHB4IDE1cHggOXB4IHJnYmEoMCwwLDAsMC4xKTsgICAgLyogaGVpZ2h0OiBjbGFtcCgzMHB4LCAwLjVyZW0sIDRyZW0pOyAqL1xcbn1cXG5cXG4udGFza09wdGlvbnMgPiAqe1xcbiAgICBtYXgtaGVpZ2h0OiAycmVtO1xcbn1cXG5cXG4udGFza09wdGlvbnMgPiBpbnB1dCwgc2VsZWN0e1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjgwNzQ3O1xcbiAgICBjb2xvcjogd2hpdGU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG59XFxuXFxuXFxuLnRhc2tPcHRpb25zID4gYnV0dG9ue1xcbiAgICBiYWNrZ3JvdW5kOiAgIzY4MDc0NztcXG4gICAgYm9yZGVyOiAxcHggc29saWQgIzY4MDc0NztcXG4gICAgYm9yZGVyLXJhZGl1czogNnB4O1xcbiAgICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMSkgMXB4IDJweCA0cHg7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIGNvbG9yOiAjRkZGRkZGO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nLCBzYW5zLXNlcmlmO1xcbiAgICBmb250LXNpemU6IDFyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiA4MDA7XFxuICAgIGxpbmUtaGVpZ2h0OiAxNnB4O1xcbiAgICBtaW4taGVpZ2h0OiAyMHB4O1xcbiAgICBvdXRsaW5lOiAwO1xcbiAgICBwYWRkaW5nOiA2cHggN3B4O1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIHRleHQtcmVuZGVyaW5nOiBnZW9tZXRyaWNwcmVjaXNpb247XFxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xcbiAgICB1c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcXG4gICAgdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XFxuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7IFxcbn1cXG5cXG4udGFza09wdGlvbnMgPiBidXR0b246aG92ZXJ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGluaXRpYWw7XFxuICB9XFxuXFxuLnRhc2tQYXJhRGl2e1xcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDIlO1xcbiAgICBwYWRkaW5nOiA1cHg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGZsZXgtZ3JvdzogMTsgXFxuXFxufVxcblxcbi50YXNrQnV0dG9uRGl2e1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDIlO1xcbiAgICBwYWRkaW5nOiAxMHB4O1xcbn1cXG5cXG4udGFza0J1dHRvbkRpdiA+IGJ1dHRvbntcXG4gICAgYmFja2dyb3VuZDogICM2ODA3NDc7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM2ODA3NDc7XFxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcXG4gICAgYm94LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjEpIDFweCAycHggNHB4O1xcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbiAgICBjb2xvcjogI0ZGRkZGRjtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXG4gICAgZm9udC1zaXplOiAxcmVtO1xcbiAgICBmb250LXdlaWdodDogODAwO1xcbiAgICBsaW5lLWhlaWdodDogMTZweDtcXG4gICAgbWluLWhlaWdodDogMjBweDtcXG4gICAgb3V0bGluZTogMDtcXG4gICAgcGFkZGluZzogNnB4IDdweDtcXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgICB0ZXh0LXJlbmRlcmluZzogZ2VvbWV0cmljcHJlY2lzaW9uO1xcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcXG4gICAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAgIHRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyBcXG59XFxuXFxuLnRhc2tCdXR0b25EaXYgPiBidXR0b246aG92ZXJ7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IGluaXRpYWw7XFxuICB9XFxuXFxuICAuY29tcGxldGUge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzQsIDEyOCwgMzQpO1xcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZS1pbjsgLyogQWRqdXN0IHRoZSBkdXJhdGlvbiBhbmQgdGltaW5nIGZ1bmN0aW9uIGFzIG5lZWRlZCAqL1xcbn1cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiZXhwb3J0IGNsYXNzIFByb2plY3Qge1xuICAgIGNvbnN0cnVjdG9yKHByb2plY3ROYW1lKXtcbiAgICAgICAgdGhpcy5wcm9qZWN0TmFtZSA9IHByb2plY3ROYW1lO1xuICAgICAgICB0aGlzLnRhc2sgPSBbXTtcbiAgICB9XG5cbiAgICBhZGRUYXNrKG5ld1Rhc2spe1xuICAgICAgICB0aGlzLnRhc2sucHVzaChuZXdUYXNrKTtcbiAgICB9XG5cbiAgICBkaXNwbGF5VGFzayhpbmRleCl7XG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMudGFza1tpbmRleC0xXSlcbiAgICB9XG5cbiAgICBnZXREZXNjcmlwdGlvbigpe1xuICAgICAgICByZXR1cm4gdGhpcy50YXNrLm1hcCh0YXNrID0+IHRhc2suZGVzY3JpcHRpb24pOyBcbiAgICB9XG5cbiAgICBnZXRQcmlvKCl7XG4gICAgICAgIHJldHVybiB0aGlzLnRhc2subWFwKHRhc2sgPT4gdGFzay5wcmlvcml0eSk7IFxuICAgIH1cblxuICAgIGdldER1ZURhdGUoKXtcbiAgICAgICAgcmV0dXJuIHRoaXMudGFzay5tYXAodGFzayA9PiB0YXNrLmR1ZURhdGUpOyBcbiAgICB9XG5cbiAgICBnZXRJRCgpe1xuICAgICAgICByZXR1cm4gY29uc29sZS5sb2codGhpcy50YXNrLm1hcCh0YXNrID0+IHRhc2suaWQpKTtcbn1cbn0iLCJleHBvcnQgZnVuY3Rpb24gZ2V0UHJvamVjdHNGcm9tU3RvcmFnZSgpIHtcbiAgICBjb25zdCBzdG9yZWRQcm9qZWN0cyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiUHJvamVjdHNcIik7XG4gICAgcmV0dXJuIHN0b3JlZFByb2plY3RzID8gSlNPTi5wYXJzZShzdG9yZWRQcm9qZWN0cykgOiBbXTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNldERlZmF1bHRQcm9qZWN0KGRlZmF1bHRQcm9qZWN0KXtcbiAgICBjb25zdCBzdG9yZWRQcm9qZWN0cyA9IGdldFByb2plY3RzRnJvbVN0b3JhZ2UoKTtcblxuICAgaWYoc3RvcmVkUHJvamVjdHMubGVuZ3RoID09PSAwKXtcbiAgICBzdG9yZWRQcm9qZWN0cy5wdXNoKGRlZmF1bHRQcm9qZWN0KVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiUHJvamVjdHNcIiwgSlNPTi5zdHJpbmdpZnkoc3RvcmVkUHJvamVjdHMpKTtcbiAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHN0b3JlUHJvamVjdChwcm9qZWN0KSB7XG4gICAgXG4gICAgbGV0IGV4aXN0aW5nUHJvamVjdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiUHJvamVjdHNcIikpIHx8IFtdO1xuXG4gICAgLy8gQ2hlY2sgaWYgdGhlIHByb2plY3Qgd2l0aCB0aGUgc2FtZSBuYW1lIGFscmVhZHkgZXhpc3RzXG4gICAgY29uc3QgZXhpc3RpbmdQcm9qZWN0ID0gZXhpc3RpbmdQcm9qZWN0cy5maW5kKChwcm9qZWN0T2JqKSA9PiB7XG4gICAgICAgIHJldHVybiBwcm9qZWN0T2JqLnByb2plY3ROYW1lID09PSBwcm9qZWN0LnByb2plY3ROYW1lO1xuICAgIH0pO1xuXG4gICAgaWYgKGV4aXN0aW5nUHJvamVjdCkge1xuICAgICAgICAvLyBJZiBhIHByb2plY3Qgd2l0aCB0aGUgc2FtZSBuYW1lIGV4aXN0cywgc2hvdyBhbiBhbGVydCBhbmQgcmV0dXJuXG4gICAgICAgIGFsZXJ0KFwiTmFtZXMgYXJlIHRoZSBzYW1lXCIpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBJZiBubyBwcm9qZWN0IHdpdGggdGhlIHNhbWUgbmFtZSBleGlzdHMsIGFkZCB0aGUgbmV3IHByb2plY3RcbiAgICAgICAgZXhpc3RpbmdQcm9qZWN0cy5wdXNoKHByb2plY3QpO1xuICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcIlByb2plY3RzXCIsIEpTT04uc3RyaW5naWZ5KGV4aXN0aW5nUHJvamVjdHMpKTtcbiAgICAgICAgY29uc29sZS5sb2coXCJQcm9qZWN0IGFkZGVkIHN1Y2Nlc3NmdWxseVwiKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlbGV0ZVByb2plY3QocHJvamVjdFRvRGVsZXRlKSB7XG5cbiAgICBjb25zdCBleGlzdGluZ1Byb2plY3RzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIlByb2plY3RzXCIpKSB8fCBbXTtcbiAgICBjb25zb2xlLmxvZyhKU09OLnN0cmluZ2lmeShleGlzdGluZ1Byb2plY3RzKSk7XG4gICAgY29uc29sZS5sb2coZXhpc3RpbmdQcm9qZWN0cy5sZW5ndGgpXG5cbiAgICAgZm9yKGxldCBpID0gMDsgaSA8IGV4aXN0aW5nUHJvamVjdHMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgaWYoZXhpc3RpbmdQcm9qZWN0c1tpXS5wcm9qZWN0TmFtZT09PXByb2plY3RUb0RlbGV0ZS5wcm9qZWN0TmFtZSl7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcImRlbGV0aW5nIHRoaXNcIilcbiAgICAgICAgICAgIGV4aXN0aW5nUHJvamVjdHMuc3BsaWNlKGksIDEpO1xuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJQcm9qZWN0c1wiLCBKU09OLnN0cmluZ2lmeShleGlzdGluZ1Byb2plY3RzKSlcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGV4aXN0aW5nUHJvamVjdHMpXG4gICAgICAgICB9XG4gICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVByb2plY3ROYW1lKHByb2plY3RUb0VkaXQsIG5ld05hbWVJcyl7XG4gICAgY29uc3QgZXhpc3RpbmdQcm9qZWN0cyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJQcm9qZWN0c1wiKSkgfHwgW107XG5cbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgZXhpc3RpbmdQcm9qZWN0cy5sZW5ndGg7IGkrKyl7XG4gICAgICAgIGlmKGV4aXN0aW5nUHJvamVjdHNbaV0ucHJvamVjdE5hbWU9PT1wcm9qZWN0VG9FZGl0LnByb2plY3ROYW1lKXtcbiAgICAgICAgICAgIGV4aXN0aW5nUHJvamVjdHNbaV0ucHJvamVjdE5hbWUgPSBuZXdOYW1lSXM7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhleGlzdGluZ1Byb2plY3RzW2ldLnByb2plY3ROYW1lKVxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJQcm9qZWN0c1wiLCBKU09OLnN0cmluZ2lmeShleGlzdGluZ1Byb2plY3RzKSlcblxuICAgICAgICB9XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RvcmVUYXNrcyhzdG9yZVRhc2ssIHByb2plY3ROYW1lKXtcbiAgICBsZXQgZXhpc3RpbmdQcm9qZWN0cyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJQcm9qZWN0c1wiKSkgfHwgW107XG5cbiAgICAgZm9yKGxldCBpID0gMDsgaSA8IGV4aXN0aW5nUHJvamVjdHMubGVuZ3RoOyBpKyspe1xuICAgICAgICAgaWYoZXhpc3RpbmdQcm9qZWN0c1tpXS5wcm9qZWN0TmFtZSA9PT0gcHJvamVjdE5hbWUucHJvamVjdE5hbWUpe1xuICAgICAgICAgICAgZXhpc3RpbmdQcm9qZWN0c1tpXS50YXNrID0gc3RvcmVUYXNrO1xuICAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICAgY29uc29sZS5sb2coXCJ3ZSBkb250IG1hdGNoXCIpXG4gICAgICAgICB9XG4gICAgIH1cbiAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJQcm9qZWN0c1wiLCBKU09OLnN0cmluZ2lmeShleGlzdGluZ1Byb2plY3RzKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBkZWxldGVUYXNrKHRhc2tUb0RlbGV0ZSwgcHJvamVjdE5hbWUpIHtcbiAgICBsZXQgZXhpc3RpbmdQcm9qZWN0cyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJQcm9qZWN0c1wiKSkgfHwgW107XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGV4aXN0aW5nUHJvamVjdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGV4aXN0aW5nUHJvamVjdHNbaV0ucHJvamVjdE5hbWUgPT09IHByb2plY3ROYW1lLnByb2plY3ROYW1lKSB7XG5cbiAgICAgICAgICAgIGNvbnN0IGluZGV4VG9EZWxldGUgPSBleGlzdGluZ1Byb2plY3RzW2ldLnRhc2suZmluZEluZGV4KHRhc2sgPT4gdGFzay5kZXNjcmlwdGlvbiA9PT0gdGFza1RvRGVsZXRlLmRlc2NyaXB0aW9uKTtcblxuICAgICAgICAgICAgLy8gSWYgdGhlIHRhc2sgaXMgZm91bmQsIHJlbW92ZSBpdCBmcm9tIHRoZSAndGFzaycgYXJyYXlcbiAgICAgICAgICAgIGlmIChpbmRleFRvRGVsZXRlICE9PSAtMSkge1xuICAgICAgICAgICAgICAgIGV4aXN0aW5nUHJvamVjdHNbaV0udGFzay5zcGxpY2UoaW5kZXhUb0RlbGV0ZSwgMSk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJVcGRhdGVkIHRhc2tzOlwiLCBleGlzdGluZ1Byb2plY3RzW2ldLnRhc2spO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlRhc2sgbm90IGZvdW5kOlwiLCB0YXNrVG9EZWxldGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJObyBtYXRjaCBmb3I6XCIsIHByb2plY3ROYW1lLnByb2plY3ROYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBVcGRhdGUgbG9jYWwgc3RvcmFnZSB3aXRoIHRoZSBtb2RpZmllZCBhcnJheVxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiUHJvamVjdHNcIiwgSlNPTi5zdHJpbmdpZnkoZXhpc3RpbmdQcm9qZWN0cykpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlVGFza05hbWUodGFza1RvVXBkYXRlLCBwcm9qZWN0TmFtZSwgbmV3TmFtZSl7XG4gICAgbGV0IGV4aXN0aW5nUHJvamVjdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKFwiUHJvamVjdHNcIikpIHx8IFtdO1xuXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBleGlzdGluZ1Byb2plY3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChleGlzdGluZ1Byb2plY3RzW2ldLnByb2plY3ROYW1lID09PSBwcm9qZWN0TmFtZS5wcm9qZWN0TmFtZSkge1xuICAgICAgICAgICAgLy9ydW4gZm9yIGxvb3Agb24gZXhpc3RpbmdQcm9qZWN0c1tpXS50YXNrIGFuZCBtYXRjaCBpdCBhZ2FpbnMgdGFza1RvVXBkYXRlXG4gICAgICAgICAgICBmb3IobGV0IGogPSAwOyBqIDwgZXhpc3RpbmdQcm9qZWN0c1tpXS50YXNrLmxlbmd0aDsgaisrKXtcbiAgICAgICAgICAgICAgICBpZihleGlzdGluZ1Byb2plY3RzW2ldLnRhc2tbal0uZGVzY3JpcHRpb24gPT09IHRhc2tUb1VwZGF0ZS5kZXNjcmlwdGlvbil7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwibWF0Y2hcIik7XG4gICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nUHJvamVjdHNbaV0udGFza1tqXS5kZXNjcmlwdGlvbiA9IG5ld05hbWU7XG4gICAgICAgICAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiUHJvamVjdHNcIiwgSlNPTi5zdHJpbmdpZnkoZXhpc3RpbmdQcm9qZWN0cykpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG1hcmtBc0NvbXBsZXRlZCh0YXNrVG9VcGRhdGUsIHByb2plY3ROYW1lLCB2YWx1ZSwgY3VycmVudFRhc2tzRGl2KXtcbiAgICBsZXQgZXhpc3RpbmdQcm9qZWN0cyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJQcm9qZWN0c1wiKSkgfHwgW107XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGV4aXN0aW5nUHJvamVjdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKGV4aXN0aW5nUHJvamVjdHNbaV0ucHJvamVjdE5hbWUgPT09IHByb2plY3ROYW1lLnByb2plY3ROYW1lKSB7XG4gICAgICAgICAgICAvL3J1biBmb3IgbG9vcCBvbiBleGlzdGluZ1Byb2plY3RzW2ldLnRhc2sgYW5kIG1hdGNoIGl0IGFnYWlucyB0YXNrVG9VcGRhdGVcbiAgICAgICAgICAgIGZvcihsZXQgaiA9IDA7IGogPCBleGlzdGluZ1Byb2plY3RzW2ldLnRhc2subGVuZ3RoOyBqKyspe1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwibWF0Y2hpbmcgdGhpcyB0YXNrIGFuZCB0aGlzIHRhc2tcIilcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhleGlzdGluZ1Byb2plY3RzW2ldLnRhc2tbal0pXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codGFza1RvVXBkYXRlKVxuICAgICAgICAgICAgICAgIGlmKGV4aXN0aW5nUHJvamVjdHNbaV0udGFza1tqXS5kZXNjcmlwdGlvbiA9PT0gdGFza1RvVXBkYXRlLmRlc2NyaXB0aW9uKXtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJtYXRjaFwiKTtcbiAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdQcm9qZWN0c1tpXS50YXNrW2pdLmNvbXBsZXRlZCA9IHZhbHVlO1xuICAgICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcIlByb2plY3RzXCIsIEpTT04uc3RyaW5naWZ5KGV4aXN0aW5nUHJvamVjdHMpKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJ0YXNrIGRpdlwiKVxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhjdXJyZW50VGFza3NEaXYpXG4gICAgICAgICAgICAgICAgICAgICBpZih2YWx1ZSA9PT0gdHJ1ZSl7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInRydWUgYWRkaW5nXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFRhc2tzRGl2LmNsYXNzTGlzdC5hZGQoXCJjb21wbGV0ZVwiKVxuICAgICAgICAgICAgICAgICAgICAgfWlmKHZhbHVlID09PSBmYWxzZSl7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImZhbHNlIHJlbW92aW5nXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudFRhc2tzRGl2LmNsYXNzTGlzdC5yZW1vdmUoXCJjb21wbGV0ZVwiKVxuICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG4iLCIgaW1wb3J0IHsgZGVsZXRlVGFzaywgdXBkYXRlVGFza05hbWUgfSBmcm9tIFwiLi9zdG9yYWdlXCI7XG4gaW1wb3J0IHsgZ2V0UHJvamVjdHNGcm9tU3RvcmFnZSwgbWFya0FzQ29tcGxldGVkIH0gZnJvbSBcIi4vc3RvcmFnZVwiO1xuIFxuIGV4cG9ydCBmdW5jdGlvbiBhZGRDb21wbGV0ZUJ1dHRvbihjcmVhdGVOZXdQcm9qZWN0LGdldFRhc2tEaXZJZCwgY3VycmVudFRhc2tzRGl2LCBpc1Rhc2tDb21wbGV0ZWQpe1xuICAgIGNvbnN0IHB1bGxQcm9qZWN0cyA9IGdldFByb2plY3RzRnJvbVN0b3JhZ2UoKTtcblxuICAgIGNvbnN0IGNvbXBsZXRlQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBjb21wbGV0ZUJ1dHRvbi5pbm5lckhUTUw9IFwiTWFyayBhcyBjb21wbGV0ZVwiO1xuXG4gICAgIGNvbXBsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoICk9PntcbiAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY3JlYXRlTmV3UHJvamVjdC50YXNrLmxlbmd0aDsgaSsrKXtcbiAgICAgICAgICAgICBpZihjcmVhdGVOZXdQcm9qZWN0LnRhc2tbaV0uaWQgPT0gZ2V0VGFza0RpdklkKXsgXG4gICAgICAgICAgICAgICAgIGlmKGNyZWF0ZU5ld1Byb2plY3QudGFza1tpXS5jb21wbGV0ZWQgPT0gdHJ1ZSl7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICBtYXJrQXNDb21wbGV0ZWQoY3JlYXRlTmV3UHJvamVjdC50YXNrW2ldLGNyZWF0ZU5ld1Byb2plY3QsIHZhbHVlLCBjdXJyZW50VGFza3NEaXYpXG4gICAgICAgICAgICAgICAgICAgICBjcmVhdGVOZXdQcm9qZWN0LnRhc2tbaV0uY29tcGxldGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICBjdXJyZW50VGFza3NEaXYuY2xhc3NMaXN0LnJlbW92ZShcImNvbXBsZXRlXCIpXG4gICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgfWlmKGNyZWF0ZU5ld1Byb2plY3QudGFza1tpXS5jb21wbGV0ZWQgPT0gZmFsc2Upe1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICBtYXJrQXNDb21wbGV0ZWQoY3JlYXRlTmV3UHJvamVjdC50YXNrW2ldLGNyZWF0ZU5ld1Byb2plY3QsIHZhbHVlLCBjdXJyZW50VGFza3NEaXYgKVxuICAgICAgICAgICAgICAgICAgICAgY3JlYXRlTmV3UHJvamVjdC50YXNrW2ldLmNvbXBsZXRlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICBjdXJyZW50VGFza3NEaXYuY2xhc3NMaXN0LmFkZChcImNvbXBsZXRlXCIpXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgfVxuICAgICAgICAgfVxuICAgICB9KVxuICAgICByZXR1cm4oY29tcGxldGVCdXR0b24pO1xuXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGREZWxldGVCdXR0b24gKGNyZWF0ZU5ld1Byb2plY3QsIGdldFRhc2tEaXZJZCwgY3VycmVudFRhc2tzRGl2LCB0YXNrRGl2KXtcbiAgICBjb25zdCBkZWxldGVUYXNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBkZWxldGVUYXNrQnV0dG9uLmNsYXNzTGlzdC5hZGQoXCJkZWxldGVUYXNrXCIpO1xuICAgIGRlbGV0ZVRhc2tCdXR0b24uaW5uZXJIVE1MID0gXCJEZWxldGUgVGFza1wiO1xuXG4gICAgZGVsZXRlVGFza0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCk9PntcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjcmVhdGVOZXdQcm9qZWN0LnRhc2subGVuZ3RoOyBpKyspe1xuICAgICAgICAgICAgaWYoY3JlYXRlTmV3UHJvamVjdC50YXNrW2ldLmlkID09IGdldFRhc2tEaXZJZCl7XG4gICAgICAgICAgICAgICAgZGVsZXRlVGFzayhjcmVhdGVOZXdQcm9qZWN0LnRhc2tbaV0sIGNyZWF0ZU5ld1Byb2plY3QpXG4gICAgICAgICAgICAgICAgY3JlYXRlTmV3UHJvamVjdC50YXNrLnNwbGljZShpLDEpOyAgXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGFza0Rpdi5yZW1vdmVDaGlsZChjdXJyZW50VGFza3NEaXYpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGRlbGV0ZVRhc2tCdXR0b247XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhZGRFZGl0QnV0dG9uKGNyZWF0ZU5ld1Byb2plY3QsIGdldFRhc2tEaXZJZCwgY3VycmVudFRhc2tzRGl2LCBpc1Rhc2tDb21wbGV0ZWQsIHRhc2tEaXYsIHRhc2tCdXR0b25EaXYpe1xuICAgIGNvbnN0IGVkaXRUYXNrQnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICBlZGl0VGFza0J1dHRvbi5pbm5lckhUTUwgPSBcIkVkaXQgTmFtZVwiO1xuXG4gICAgZWRpdFRhc2tCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpPT57XG4gICAgICAgIGxldCBlZGl0VGFza05hbWUgPSBwcm9tcHQoXCJOZXcgVGFzayBuYW1lOlwiKTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNyZWF0ZU5ld1Byb2plY3QudGFzay5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICBpZihjcmVhdGVOZXdQcm9qZWN0LnRhc2tbaV0uaWQgPT0gZ2V0VGFza0RpdklkKXtcbiAgICAgICAgICAgICAgICB1cGRhdGVUYXNrTmFtZShjcmVhdGVOZXdQcm9qZWN0LnRhc2tbaV0sY3JlYXRlTmV3UHJvamVjdCxlZGl0VGFza05hbWUpO1xuICAgICAgICAgICAgICAgIGNyZWF0ZU5ld1Byb2plY3QudGFza1tpXS5kZXNjcmlwdGlvbiA9IGVkaXRUYXNrTmFtZTtcblxuICAgICAgICAgICAgICAgIGN1cnJlbnRUYXNrc0Rpdi5pbm5lckhUTUwgPSBcbiAgICAgICAgICAgICAgICBgPGRpdiBjbGFzcz1cInRhc2tQYXJhRGl2XCI+PHA+VGFzayBuYW1lOiA8Yj4ke2NyZWF0ZU5ld1Byb2plY3QuZ2V0RGVzY3JpcHRpb24oKVtpXX08L2I+PC9wPlxuICAgICAgICAgICAgICAgIDxwPlByaW9yaXR5OiA8Yj4ke2NyZWF0ZU5ld1Byb2plY3QuZ2V0UHJpbygpW2ldfTwvYj48L3A+XG4gICAgICAgICAgICAgICAgPHA+RHVlOiA8Yj4ke2NyZWF0ZU5ld1Byb2plY3QuZ2V0RHVlRGF0ZSgpW2ldfTwvYj48L3A+PC9kaXY+YDsgICAgXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuXG4gICAgY29uc29sZS5sb2coY3JlYXRlTmV3UHJvamVjdCk7XG4gICAgY3VycmVudFRhc2tzRGl2LmFwcGVuZENoaWxkKHRhc2tCdXR0b25EaXYpO1xuXG5cbiAgICB9KTtcbiAgICByZXR1cm4gZWRpdFRhc2tCdXR0b247XG59XG5cbiIsImltcG9ydCB7IHN0b3JlVGFza3MsIGRlbGV0ZVRhc2ssIHVwZGF0ZVRhc2tOYW1lIH0gZnJvbSBcIi4vc3RvcmFnZVwiO1xuaW1wb3J0IHsgYWRkQ29tcGxldGVCdXR0b24sIGFkZERlbGV0ZUJ1dHRvbiwgYWRkRWRpdEJ1dHRvbiB9IGZyb20gXCIuL2J1dHRvbnNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRhc2soY3JlYXRlTmV3UHJvamVjdCl7XG4gICAgbGV0IGRhdGFDb3VudGVyID0gMDtcbiAgICBsZXQgdGFza0NvdW50ZXIgPSAwO1xuXG4gICAgY29uc3QgdGFza0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgXG4gICAgLy9ET00gZm9yIGFkZGluZyBUYXNrcyBpbnRvIFByb2plY3RzXG4gICAgY29uc3QgYWRkVGFza0Zvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgYWRkVGFza0Zvcm0uc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInRleHRcIik7XG4gICAgYWRkVGFza0Zvcm0uc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcInNldFByb3BlcnR5XCIpO1xuICAgIGFkZFRhc2tGb3JtLnNldEF0dHJpYnV0ZShcImlkXCIsIFwic2V0UHJvcGVydHlcIik7XG4gICAgXG4gICAgY29uc3QgYWRkTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgYWRkTGFiZWwuc2V0QXR0cmlidXRlKFwiZm9yXCIsIFwic2V0UHJvcGVydHlcIik7XG4gICAgYWRkTGFiZWwuaW5uZXJIVE1MID0gXCJUYXNrIE5hbWU6XCI7XG4gICAgXG4gICAgdGFza0Rpdi5jbGFzc0xpc3QuYWRkKFwidGFza0RpdlwiKTtcbiAgICBcbiAgICAvL0RPTSBmb3IgYWRkaW5nIHByaW9yaXR5IG9uIFRhc2tzXG4gICAgY29uc3QgYWRkUHJpb0Zvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2VsZWN0XCIpOyAgXG4gICAgYWRkUHJpb0Zvcm0uc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcInNldFByaW9cIik7XG4gICAgYWRkUHJpb0Zvcm0uc2V0QXR0cmlidXRlKFwiaWRcIiwgXCJzZXRQcmlvXCIpO1xuICAgIFxuICAgIGNvbnN0IG9wdGlvbnNIaWdoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICBvcHRpb25zSGlnaC5zZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiLCBcIkhpZ2hcIik7XG4gICAgY29uc3Qgb3B0aW9uc1RleHRIaWdoID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJIaWdoXCIpO1xuICAgIFxuICAgIGNvbnN0IG9wdGlvbnNNZWQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwib3B0aW9uXCIpO1xuICAgIG9wdGlvbnNNZWQuc2V0QXR0cmlidXRlKFwidmFsdWVcIiwgXCJNZWRpdW1cIik7XG4gICAgY29uc3Qgb3B0aW9uc1RleHRNZWQgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIk1lZGl1bVwiKTtcbiAgICBcbiAgICBjb25zdCBvcHRpb25zTG93ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcIm9wdGlvblwiKTtcbiAgICBvcHRpb25zTG93LnNldEF0dHJpYnV0ZShcInZhbHVlXCIsIFwiTG93XCIpO1xuICAgIGNvbnN0IG9wdGlvbnNUZXh0TG93ID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoXCJMb3dcIik7XG4gICAgXG4gICAgb3B0aW9uc0hpZ2guYXBwZW5kQ2hpbGQob3B0aW9uc1RleHRIaWdoKTtcbiAgICBvcHRpb25zTWVkLmFwcGVuZENoaWxkKG9wdGlvbnNUZXh0TWVkKTtcbiAgICBvcHRpb25zTG93LmFwcGVuZENoaWxkKG9wdGlvbnNUZXh0TG93KTtcbiAgICBhZGRQcmlvRm9ybS5hcHBlbmRDaGlsZChvcHRpb25zSGlnaCk7XG4gICAgYWRkUHJpb0Zvcm0uYXBwZW5kQ2hpbGQob3B0aW9uc01lZCk7XG4gICAgYWRkUHJpb0Zvcm0uYXBwZW5kQ2hpbGQob3B0aW9uc0xvdyk7XG4gICAgXG4gICAgY29uc3QgYWRkTGFiZWxQcmlvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgIGFkZExhYmVsUHJpby5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJzZXRQcmlvXCIpO1xuICAgIGFkZExhYmVsUHJpby5pbm5lckhUTUwgPSBcIlByaW9yaXR5OiBcIjtcbiAgICBcbiAgICAvL0RPTSBmb3IgYWRkaW5nIGR1ZSBkYXRlIG9uIHRhc2tzXG4gICAgY29uc3QgYWRkVGFza0R1ZURhdGVGb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImlucHV0XCIpO1xuICAgIGFkZFRhc2tEdWVEYXRlRm9ybS5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiZGF0ZVwiKTtcbiAgICBhZGRUYXNrRHVlRGF0ZUZvcm0uc2V0QXR0cmlidXRlKFwibmFtZVwiLCBcInRhc2tEdWVEYXRlXCIpO1xuICAgIGFkZFRhc2tEdWVEYXRlRm9ybS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBcInRhc2tEdWVEYXRlXCIpO1xuICAgIGFkZFRhc2tEdWVEYXRlRm9ybS5zZXRBdHRyaWJ1dGUoXCJyZXF1aXJlZFwiLCBcIlwiKVxuICAgIFxuICAgIGNvbnN0IGFkZFRhc2tEdWVEYXRlTGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIik7XG4gICAgYWRkVGFza0R1ZURhdGVMYWJlbC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJ0YXNrRHVlRGF0ZVwiKTtcbiAgICBhZGRUYXNrRHVlRGF0ZUxhYmVsLmlubmVySFRNTCA9IFwiRHVlOiBcIjtcbiAgICBcbiAgICAvL0RPTSBmb3IgYWRkaW5nIGJ1dHRvbiB0byBhZGQgVGFza3NcbiAgICBjb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGFkZEJ1dHRvbi5pbm5lckhUTUwgPSBcIkFkZCBUYXNrXCJcblxuICAgIC8vRE9NIGZvciBhZGRpbmcgdGFza3Mgb3B0aW9ucyBpbnRvIGEgZGl2XG4gICAgY29uc3QgdGFza09wdGlvbnNEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHRhc2tPcHRpb25zRGl2LmNsYXNzTGlzdC5hZGQoXCJ0YXNrT3B0aW9uc1wiKSAgICAgIFxuXG4gICAgY29uc29sZS5sb2coXCJpbiB0YXNrc1wiKVxuICAgIGNvbnNvbGUubG9nKGNyZWF0ZU5ld1Byb2plY3QpXG4gICAgICAgIFxuICAgIC8vVGFza3MgYmVpbmcgYWRkZWQgdG8gYXJyYXlcbiAgICBhZGRCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpPT57XG4gICAgICAgIGNvbnN0IHRhc2tWYWx1ZSA9IGFkZFRhc2tGb3JtLnZhbHVlO1xuICAgICAgICBjb25zdCBwcmlvVmFsdWUgPSBhZGRQcmlvRm9ybS52YWx1ZTtcbiAgICAgICAgY29uc3QgZHVlRGF0ZVZhbHVlID0gYWRkVGFza0R1ZURhdGVGb3JtLnZhbHVlO1xuXG4gICAgICAgIGxldCBpc1Rhc2tDb21wbGV0ZWQgPSBmYWxzZTtcblxuICAgICAgICBpZih0YXNrVmFsdWU9PVwiXCJ8fHByaW9WYWx1ZT09XCJcInx8ZHVlRGF0ZVZhbHVlPT1cIlwiKXtcbiAgICAgICAgcmV0dXJuIGFsZXJ0KFwiRmlsbCBvdXQgYWxsIHRoZSBmaWVsZHNcIilcbiAgICAgICAgfVxuICAgIFxuICAgICAgICAgY3JlYXRlTmV3UHJvamVjdC5hZGRUYXNrKHsgXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogdGFza1ZhbHVlLFxuICAgICAgICAgICAgcHJpb3JpdHk6IHByaW9WYWx1ZSxcbiAgICAgICAgICAgIGR1ZURhdGU6IGR1ZURhdGVWYWx1ZSxcbiAgICAgICAgICAgIGNvbXBsZXRlZDppc1Rhc2tDb21wbGV0ZWQsXG4gICAgICAgICAgICBpZDogZGF0YUNvdW50ZXIrKyxcbiAgICAgICAgfSk7XG4gICAgICAgIHRhc2tDb3VudGVyKys7XG4gICAgICAgIHN0b3JlVGFza3MoY3JlYXRlTmV3UHJvamVjdC50YXNrLCBjcmVhdGVOZXdQcm9qZWN0KTtcblxuICAgICAgICAvL0RPTSBmb3IgZGlzcGxheWluZyB0YXNrc1xuICAgICAgICBjb25zdCBjdXJyZW50VGFza3NEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBjdXJyZW50VGFza3NEaXYuY2xhc3NMaXN0LmFkZChcImN1cnJlbnRUYXNrc1wiKTtcbiAgICAgICAgY3VycmVudFRhc2tzRGl2LnNldEF0dHJpYnV0ZShcImRhdGEtaWRcIiwgdGFza0NvdW50ZXIgLTEpO1xuICAgICAgICAgICAgXG4gICAgICAgIGFkZFRhc2tGb3JtLnZhbHVlID0gXCJcIjtcbiAgICAgICAgY29uc29sZS5sb2coY3JlYXRlTmV3UHJvamVjdCk7XG5cbiAgICAgICAgY29uc3QgZ2V0VGFza0RpdklkID0gY3VycmVudFRhc2tzRGl2LmRhdGFzZXQuaWQ7XG5cbiAgICAgICAgY29uc29sZS5sb2coZ2V0VGFza0RpdklkICsgXCJmb3IgY3VycmVudHRhc2tEaXZcIilcbiAgICAgICAgY3VycmVudFRhc2tzRGl2LmlubmVySFRNTCA9IFxuICAgICAgICAgICAgYDxkaXYgY2xhc3M9XCJ0YXNrUGFyYURpdlwiPjxwPlRhc2sgbmFtZTogPGI+JHtjcmVhdGVOZXdQcm9qZWN0LmdldERlc2NyaXB0aW9uKClbY3JlYXRlTmV3UHJvamVjdC50YXNrLmxlbmd0aCAtMV19PC9iPjwvcD5cbiAgICAgICAgICAgIDxwPlByaW9yaXR5OiA8Yj4ke2NyZWF0ZU5ld1Byb2plY3QuZ2V0UHJpbygpW2NyZWF0ZU5ld1Byb2plY3QudGFzay5sZW5ndGggLTFdfTwvYj48L3A+XG4gICAgICAgICAgICA8cD5EdWU6IDxiPiR7Y3JlYXRlTmV3UHJvamVjdC5nZXREdWVEYXRlKClbY3JlYXRlTmV3UHJvamVjdC50YXNrLmxlbmd0aCAtMV19PC9iPjwvcD48L2Rpdj5gO1xuXG4gICAgICAgIFxuICAgICAgICBjb25zdCB0YXNrQnV0dG9uRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgdGFza0J1dHRvbkRpdi5jbGFzc0xpc3QuYWRkKFwidGFza0J1dHRvbkRpdlwiKTtcblxuICAgICAgICBjb25zdCBjb21wbGV0ZUJ1dHRvbiA9IGFkZENvbXBsZXRlQnV0dG9uKGNyZWF0ZU5ld1Byb2plY3QsIGdldFRhc2tEaXZJZCwgY3VycmVudFRhc2tzRGl2LCBpc1Rhc2tDb21wbGV0ZWQpO1xuXG4gICAgICAgIGNvbnN0IGRlbGV0ZUJ1dHRvbiA9IGFkZERlbGV0ZUJ1dHRvbihjcmVhdGVOZXdQcm9qZWN0LCBnZXRUYXNrRGl2SWQsIGN1cnJlbnRUYXNrc0RpdiwgdGFza0RpdilcblxuICAgICAgICBjb25zdCBlZGl0QnV0dG9uID0gYWRkRWRpdEJ1dHRvbihjcmVhdGVOZXdQcm9qZWN0LCBnZXRUYXNrRGl2SWQsIGN1cnJlbnRUYXNrc0RpdiwgaXNUYXNrQ29tcGxldGVkLCB0YXNrRGl2LCB0YXNrQnV0dG9uRGl2KTtcblxuICAgICAgICB0YXNrRGl2LmFwcGVuZENoaWxkKGN1cnJlbnRUYXNrc0Rpdik7XG4gICAgICAgIGN1cnJlbnRUYXNrc0Rpdi5hcHBlbmRDaGlsZCh0YXNrQnV0dG9uRGl2KTtcbiAgICAgICAgdGFza0J1dHRvbkRpdi5hcHBlbmRDaGlsZChjb21wbGV0ZUJ1dHRvbik7XG4gICAgICAgIHRhc2tCdXR0b25EaXYuYXBwZW5kQ2hpbGQoZWRpdEJ1dHRvbik7XG4gICAgICAgIHRhc2tCdXR0b25EaXYuYXBwZW5kQ2hpbGQoZGVsZXRlQnV0dG9uKTtcbn0pXG5cbiAgICAvL2NvbnN0IGhyTGluZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoclwiKTtcbiBcbiAgICB0YXNrT3B0aW9uc0Rpdi5hcHBlbmRDaGlsZChhZGRMYWJlbCk7XG4gICAgdGFza09wdGlvbnNEaXYuYXBwZW5kQ2hpbGQoYWRkVGFza0Zvcm0pO1xuICAgIHRhc2tPcHRpb25zRGl2LmFwcGVuZENoaWxkKGFkZExhYmVsUHJpbyk7XG4gICAgdGFza09wdGlvbnNEaXYuYXBwZW5kQ2hpbGQoYWRkUHJpb0Zvcm0pO1xuICAgIHRhc2tPcHRpb25zRGl2LmFwcGVuZENoaWxkKGFkZFRhc2tEdWVEYXRlTGFiZWwpO1xuICAgIHRhc2tPcHRpb25zRGl2LmFwcGVuZENoaWxkKGFkZFRhc2tEdWVEYXRlRm9ybSk7XG4gICAgdGFza09wdGlvbnNEaXYuYXBwZW5kQ2hpbGQoYWRkQnV0dG9uKTtcbiAgICB0YXNrRGl2LmFwcGVuZENoaWxkKHRhc2tPcHRpb25zRGl2KTtcbiAgICAvL3Rhc2tEaXYuYXBwZW5kQ2hpbGQoaHJMaW5lKVxuXG4gICAgcmV0dXJuIHRhc2tEaXY7XG59IiwiZXhwb3J0IGZ1bmN0aW9uIGRpc3BsYXlQcm9qZWN0RnJvbVN0b3JhZ2UodGhlTmFtZUlzKXtcbiAgICBsZXQgZXhpc3RpbmdQcm9qZWN0cyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJQcm9qZWN0c1wiKSkgfHwgW107XG5cbiAgICBpZiAoZXhpc3RpbmdQcm9qZWN0cy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZXhpc3RpbmdQcm9qZWN0cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIHByb2plY3QgbmFtZSBtYXRjaGVzIHRoZSBwcm92aWRlZCBuYW1lXG4gICAgICAgICAgICBpZiAoZXhpc3RpbmdQcm9qZWN0c1tpXS5wcm9qZWN0TmFtZSA9PT0gdGhlTmFtZUlzKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoZU5hbWVJczsgLy8gUmV0dXJuIHRoZSBwcm92aWRlZCBuYW1lIGlmIGZvdW5kXG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBJZiB0aGUgcHJvdmlkZWQgbmFtZSBpcyBub3QgZm91bmQsIHJldHVybiB0aGUgbmFtZSBvZiB0aGUgbGFzdCBwcm9qZWN0XG4gICAgICAgIHJldHVybiBleGlzdGluZ1Byb2plY3RzW2V4aXN0aW5nUHJvamVjdHMubGVuZ3RoIC0gMV0ucHJvamVjdE5hbWU7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHRoZU5hbWVJcztcbiAgICB9XG59IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IHsgUHJvamVjdCB9IGZyb20gXCIuL2NvbnN0cnVjdG9yXCI7XG5pbXBvcnQgeyBjcmVhdGVUYXNrIH0gZnJvbSBcIi4vdGFza3NcIjtcbmltcG9ydCB7IHN0b3JlUHJvamVjdCwgZGVsZXRlUHJvamVjdCwgdXBkYXRlUHJvamVjdE5hbWUsIGdldFByb2plY3RzRnJvbVN0b3JhZ2UsIHNldERlZmF1bHRQcm9qZWN0fSBmcm9tIFwiLi9zdG9yYWdlXCI7XG5pbXBvcnQgeyBkaXNwbGF5UHJvamVjdEZyb21TdG9yYWdlIH0gZnJvbSBcIi4vZGlzcGxheVwiO1xuaW1wb3J0IHsgYWRkQ29tcGxldGVCdXR0b24sIGFkZERlbGV0ZUJ1dHRvbiwgYWRkRWRpdEJ1dHRvbiB9IGZyb20gXCIuL2J1dHRvbnNcIjtcbmltcG9ydCBcIi4vc3R5bGUuY3NzXCJcblxuY29uc3QgY29udGVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29udGVudFwiKTtcbmNvbnN0IHByb2plY3ROYW1lRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvamVjdE5hbWVcIik7XG5jb25zdCBzdWJCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInN1Ym1pdFwiKTtcblxuXG53aW5kb3cub25sb2FkID0gIGZ1bmN0aW9uICgpIHtcbiAgICBsZXQgZGVmYXVsdFByb2plY3QgPSBuZXcgUHJvamVjdChcIkRlZmF1bHQgUHJvamVjdFwiKVxuICAgIHNldERlZmF1bHRQcm9qZWN0KGRlZmF1bHRQcm9qZWN0KTtcbiAgICBjb25zdCBzdG9yZWRQcm9qZWN0cyA9ICBnZXRQcm9qZWN0c0Zyb21TdG9yYWdlKCk7XG5cbiAgICBzdG9yZWRQcm9qZWN0cy5mb3JFYWNoKChzdG9yZWRQcm9qZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IHByb2plY3RJbnN0YW5jZSA9IG5ldyBQcm9qZWN0KHN0b3JlZFByb2plY3QucHJvamVjdE5hbWUpO1xuXG4gICAgICAgIHN0b3JlZFByb2plY3QudGFzay5mb3JFYWNoKCh0YXNrKT0+e1xuICAgICAgICAgICAgcHJvamVjdEluc3RhbmNlLmFkZFRhc2soe1xuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0YXNrLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgICAgIHByaW9yaXR5OiB0YXNrLnByaW9yaXR5LFxuICAgICAgICAgICAgICAgIGR1ZURhdGU6IHRhc2suZHVlRGF0ZSxcbiAgICAgICAgICAgICAgICBjb21wbGV0ZWQ6IHRhc2suY29tcGxldGVkLFxuICAgICAgICAgICAgICAgIGlkOiB0YXNrLmlkICsxMDAsXG4gICAgICAgICAgICB9KSAgIFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc29sZS5sb2coXCJhZnRlciB0YXNrc1wiKVxuICAgICAgICBjb25zb2xlLmxvZyhwcm9qZWN0SW5zdGFuY2UpXG4gICAgICAgIGRpc3BsYXlQcm9qZWN0KHByb2plY3RJbnN0YW5jZSk7XG5cbiAgICB9KTtcbn1cblxuc3ViQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKT0+e1xuICAgIC8vRE9NIGZvciBhZGRpbmcgcHJvamVjdHNcbiAgICBjb25zdCBwcm9qZWN0TmFtZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgcHJvamVjdE5hbWVEaXYuY2xhc3NMaXN0LmFkZChcInByb2plY3ROYW1lRGl2XCIpO1xuICAgIGNvbnN0IHByb2plY3RIZWFkbGluZURpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIHByb2plY3RIZWFkbGluZURpdi5jbGFzc0xpc3QuYWRkKFwicHJvamVjdEhlYWRsaW5lXCIpO1xuICAgIGNvbnN0IHByb2plY3RCdXR0b25zRGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBwcm9qZWN0QnV0dG9uc0Rpdi5jbGFzc0xpc3QuYWRkKFwicHJvamVjdEJ1dHRvbnNcIilcbiAgICBjb25zdCBwcm9qZWN0SDMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDNcIik7XG4gICAgbGV0IHRoZU5hbWVJcyA9IHByb2plY3ROYW1lRm9ybS52YWx1ZTtcbiAgICBsZXQgY3JlYXRlTmV3UHJvamVjdCA9IG5ldyBQcm9qZWN0KHRoZU5hbWVJcyk7XG5cbiAgICBpZihzdG9yZVByb2plY3QoY3JlYXRlTmV3UHJvamVjdCkgPT09ZmFsc2UgKXtcbiAgICAgICAgY29udGVudC5hcHBlbmRDaGlsZChwcm9qZWN0TmFtZURpdik7XG4gICAgICAgIGxldCBleGlzdGluZ1Byb2plY3RzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcIlByb2plY3RzXCIpKSB8fCBbXTsgICAgICAgIFxuICAgIH07XG5cbiAgICBwcm9qZWN0SDMuaW5uZXJIVE1MID0gYFByb2plY3QgbmFtZTogYCArIGRpc3BsYXlQcm9qZWN0RnJvbVN0b3JhZ2UodGhlTmFtZUlzKTtcblxuICAgIGNvbnN0IHRhc2tEaXYgPSBjcmVhdGVUYXNrKGNyZWF0ZU5ld1Byb2plY3QpO1xuXG4gICAgY29uc3QgcmVtb3ZlUHJvamVjdEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgcmVtb3ZlUHJvamVjdEJ0bi5pbm5lckhUTUwgPSBcIkRlbGV0ZSBQcm9qZWN0XCI7ICAgXG5cbiAgICBjb25zdCBlZGl0UHJvamVjdEJ0biA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIik7XG4gICAgZWRpdFByb2plY3RCdG4uaW5uZXJIVE1MID0gXCJFZGl0IFByb2plY3RcIjtcblxuICAgIHByb2plY3ROYW1lRGl2LmFwcGVuZENoaWxkKHByb2plY3RIZWFkbGluZURpdik7XG4gICAgcHJvamVjdEhlYWRsaW5lRGl2LmFwcGVuZENoaWxkKHByb2plY3RIMylcbiAgICBwcm9qZWN0SGVhZGxpbmVEaXYuYXBwZW5kQ2hpbGQocHJvamVjdEJ1dHRvbnNEaXYpXG4gICAgcHJvamVjdEJ1dHRvbnNEaXYuYXBwZW5kQ2hpbGQocmVtb3ZlUHJvamVjdEJ0bik7XG4gICAgcHJvamVjdEJ1dHRvbnNEaXYuYXBwZW5kQ2hpbGQoZWRpdFByb2plY3RCdG4pO1xuICAgIHByb2plY3ROYW1lRGl2LmFwcGVuZENoaWxkKHRhc2tEaXYpO1xuXG4gICAgcmVtb3ZlUHJvamVjdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwoKT0+e1xuICAgICAgICBjb250ZW50LnJlbW92ZUNoaWxkKHByb2plY3ROYW1lRGl2KTtcbiAgICAgICAgZGVsZXRlUHJvamVjdChjcmVhdGVOZXdQcm9qZWN0KVxuICAgIH0pXG5cbiAgICBlZGl0UHJvamVjdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCk9PntcbiAgICAgICAgbGV0IG5ld05hbWVJcyA9IHByb21wdChcImVudGVyIG5ldyBwcm9qZWN0IG5hbWU6XCIpO1xuICAgICAgICB1cGRhdGVQcm9qZWN0TmFtZShjcmVhdGVOZXdQcm9qZWN0LCBuZXdOYW1lSXMpXG4gICAgICAgIGNvbnNvbGUubG9nKG5ld05hbWVJcyk7XG4gICAgICAgIHRoZU5hbWVJcyA9IG5ld05hbWVJcztcbiAgICAgICAgY3JlYXRlTmV3UHJvamVjdC5wcm9qZWN0TmFtZSA9IHRoZU5hbWVJcztcblxuICAgICAgICBwcm9qZWN0SDMuaW5uZXJIVE1MID0gYFByb2plY3QgbmFtZSBpczogJHt0aGVOYW1lSXN9YDtcbiAgICAgICAgcHJvamVjdEhlYWRsaW5lRGl2LmFwcGVuZENoaWxkKHByb2plY3RCdXR0b25zRGl2KVxuXG4gICAgfSkgICBcbiAgICBwcm9qZWN0TmFtZUZvcm0udmFsdWUgPSBcIlwiO1xuICAgIGNvbnNvbGUubG9nKGNyZWF0ZU5ld1Byb2plY3QpO1xufSk7XG5cblxuXG5mdW5jdGlvbiBkaXNwbGF5UHJvamVjdChwcm9qZWN0SW5zdGFuY2UpIHtcbiAgICBjb25zb2xlLmxvZyhcImhlcmVcIilcbiAgICBjb25zb2xlLmxvZyhwcm9qZWN0SW5zdGFuY2UpXG4gICAgY29uc3QgcHJvamVjdE5hbWVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIHByb2plY3ROYW1lRGl2LmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0TmFtZURpdlwiKTtcbiAgICBjb25zdCBwcm9qZWN0SGVhZGxpbmVEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBwcm9qZWN0SGVhZGxpbmVEaXYuY2xhc3NMaXN0LmFkZChcInByb2plY3RIZWFkbGluZVwiKTtcbiAgICBjb25zdCBwcm9qZWN0QnV0dG9uc0RpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgcHJvamVjdEJ1dHRvbnNEaXYuY2xhc3NMaXN0LmFkZChcInByb2plY3RCdXR0b25zXCIpO1xuICAgIGNvbnN0IHByb2plY3RIMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoM1wiKTtcblxuICAgIC8vIERpc3BsYXkgcHJvamVjdCBuYW1lIGZyb20gc3RvcmFnZVxuICAgIHByb2plY3RIMy5pbm5lckhUTUwgPSBgUHJvamVjdCBuYW1lOiAke2Rpc3BsYXlQcm9qZWN0RnJvbVN0b3JhZ2UocHJvamVjdEluc3RhbmNlLnByb2plY3ROYW1lKX1gO1xuXG4gICAgY29uc3QgdGFza0RpdiA9IGNyZWF0ZVRhc2socHJvamVjdEluc3RhbmNlKTtcblxuICAgIGNvbnN0IHJlbW92ZVByb2plY3RCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIHJlbW92ZVByb2plY3RCdG4uaW5uZXJIVE1MID0gXCJEZWxldGUgUHJvamVjdFwiO1xuXG4gICAgY29uc3QgZWRpdFByb2plY3RCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xuICAgIGVkaXRQcm9qZWN0QnRuLmlubmVySFRNTCA9IFwiRWRpdCBQcm9qZWN0XCI7XG5cbiAgICBwcm9qZWN0TmFtZURpdi5hcHBlbmRDaGlsZChwcm9qZWN0SGVhZGxpbmVEaXYpO1xuICAgIHByb2plY3RIZWFkbGluZURpdi5hcHBlbmRDaGlsZChwcm9qZWN0SDMpO1xuICAgIHByb2plY3RIZWFkbGluZURpdi5hcHBlbmRDaGlsZChwcm9qZWN0QnV0dG9uc0RpdilcbiAgICBwcm9qZWN0QnV0dG9uc0Rpdi5hcHBlbmRDaGlsZChyZW1vdmVQcm9qZWN0QnRuKTtcbiAgICBwcm9qZWN0QnV0dG9uc0Rpdi5hcHBlbmRDaGlsZChlZGl0UHJvamVjdEJ0bik7XG4gICAgcHJvamVjdE5hbWVEaXYuYXBwZW5kQ2hpbGQodGFza0Rpdik7XG5cbiAgICBwcm9qZWN0SW5zdGFuY2UudGFzay5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgICAgIGNvbnN0IHRhc2tCdXR0b25EaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICB0YXNrQnV0dG9uRGl2LmNsYXNzTGlzdC5hZGQoXCJ0YXNrQnV0dG9uRGl2XCIpO1xuICAgICAgICBjb25zdCBjdXJyZW50VGFza3NEaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBjdXJyZW50VGFza3NEaXYuY2xhc3NMaXN0LmFkZChcImN1cnJlbnRUYXNrc1wiKTtcbiAgICAgICAgY3VycmVudFRhc2tzRGl2LnNldEF0dHJpYnV0ZShcImRhdGEtaWRcIiwgdGFzay5pZCk7XG4gICAgICAgIGNvbnN0IGdldFRhc2tEaXZJZCA9IGN1cnJlbnRUYXNrc0Rpdi5kYXRhc2V0LmlkO1xuICAgICAgICBjb25zdCBpc1Rhc2tDb21wbGV0ZWQgPSB0YXNrLmNvbXBsZXRlZDtcblxuICAgICAgICBpZihpc1Rhc2tDb21wbGV0ZWQgPT09IHRydWUpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ3llYSB0aGlzIGlzIGRvbmUnKVxuICAgICAgICAgICAgY3VycmVudFRhc2tzRGl2LmNsYXNzTGlzdC5hZGQoXCJjb21wbGV0ZVwiKVxuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBjdXJyZW50VGFza3NEaXYuaW5uZXJIVE1MID0gYFxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInRhc2tQYXJhRGl2XCI+PHA+VGFzayBuYW1lOiA8Yj4ke3Rhc2suZGVzY3JpcHRpb259PC9iPjwvcD5cbiAgICAgICAgICAgIDxwPlByaW9yaXR5OiA8Yj4ke3Rhc2sucHJpb3JpdHl9PC9iPjwvcD5cbiAgICAgICAgICAgIDxwPkR1ZTogPGI+JHt0YXNrLmR1ZURhdGV9PC9iPjwvcD48L2Rpdj5gO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICBjb25zdCBjb21wbGV0ZUJ1dHRvbiA9IGFkZENvbXBsZXRlQnV0dG9uKHByb2plY3RJbnN0YW5jZSxnZXRUYXNrRGl2SWQsIGN1cnJlbnRUYXNrc0Rpdik7XG4gICAgICAgIGNvbnN0IGRlbGV0ZUJ1dHRvbiA9IGFkZERlbGV0ZUJ1dHRvbihwcm9qZWN0SW5zdGFuY2UsIGdldFRhc2tEaXZJZCwgY3VycmVudFRhc2tzRGl2LCB0YXNrRGl2KTtcbiAgICAgICAgY29uc3QgZWRpdEJ1dHRvbiA9IGFkZEVkaXRCdXR0b24ocHJvamVjdEluc3RhbmNlLCBnZXRUYXNrRGl2SWQsIGN1cnJlbnRUYXNrc0RpdiwgaXNUYXNrQ29tcGxldGVkLCB0YXNrRGl2KTtcblxuICAgICAgICBcblxuICAgICAgICB0YXNrRGl2LmFwcGVuZENoaWxkKGN1cnJlbnRUYXNrc0Rpdik7XG4gICAgICAgIGN1cnJlbnRUYXNrc0Rpdi5hcHBlbmRDaGlsZCh0YXNrQnV0dG9uRGl2KTtcbiAgICAgICAgdGFza0J1dHRvbkRpdi5hcHBlbmRDaGlsZChjb21wbGV0ZUJ1dHRvbik7XG4gICAgICAgIHRhc2tCdXR0b25EaXYuYXBwZW5kQ2hpbGQoZWRpdEJ1dHRvbik7XG4gICAgICAgIHRhc2tCdXR0b25EaXYuYXBwZW5kQ2hpbGQoZGVsZXRlQnV0dG9uKTtcbiAgICB9KTtcblxuICAgIHJlbW92ZVByb2plY3RCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29udGVudC5yZW1vdmVDaGlsZChwcm9qZWN0TmFtZURpdik7XG4gICAgICAgIGRlbGV0ZVByb2plY3QocHJvamVjdEluc3RhbmNlKTtcbiAgICB9KTtcblxuICAgIGVkaXRQcm9qZWN0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIGxldCBuZXdOYW1lSXMgPSBwcm9tcHQoXCJFbnRlciBuZXcgcHJvamVjdCBuYW1lOlwiKTtcbiAgICAgICAgdXBkYXRlUHJvamVjdE5hbWUocHJvamVjdEluc3RhbmNlLCBuZXdOYW1lSXMpO1xuXG4gICAgICAgIC8vIFVwZGF0ZSB0aGUgZGlzcGxheWVkIHByb2plY3QgbmFtZVxuICAgICAgICBwcm9qZWN0SDMuaW5uZXJIVE1MID0gYFByb2plY3QgbmFtZTogJHtkaXNwbGF5UHJvamVjdEZyb21TdG9yYWdlKG5ld05hbWVJcyl9YDtcbiAgICB9KTtcbiAgICBjb250ZW50LmFwcGVuZENoaWxkKHByb2plY3ROYW1lRGl2KTtcbn1cblxuXG5cbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJQcm9qZWN0IiwiY29uc3RydWN0b3IiLCJwcm9qZWN0TmFtZSIsInRhc2siLCJhZGRUYXNrIiwibmV3VGFzayIsImRpc3BsYXlUYXNrIiwiY29uc29sZSIsImxvZyIsImdldERlc2NyaXB0aW9uIiwiZGVzY3JpcHRpb24iLCJnZXRQcmlvIiwicHJpb3JpdHkiLCJnZXREdWVEYXRlIiwiZHVlRGF0ZSIsImdldElEIiwiZ2V0UHJvamVjdHNGcm9tU3RvcmFnZSIsInN0b3JlZFByb2plY3RzIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInBhcnNlIiwiZGVsZXRlUHJvamVjdCIsInByb2plY3RUb0RlbGV0ZSIsImV4aXN0aW5nUHJvamVjdHMiLCJzZXRJdGVtIiwidXBkYXRlUHJvamVjdE5hbWUiLCJwcm9qZWN0VG9FZGl0IiwibmV3TmFtZUlzIiwiZGVsZXRlVGFzayIsInRhc2tUb0RlbGV0ZSIsImluZGV4VG9EZWxldGUiLCJmaW5kSW5kZXgiLCJ1cGRhdGVUYXNrTmFtZSIsInRhc2tUb1VwZGF0ZSIsIm5ld05hbWUiLCJqIiwibWFya0FzQ29tcGxldGVkIiwidmFsdWUiLCJjdXJyZW50VGFza3NEaXYiLCJjb21wbGV0ZWQiLCJjbGFzc0xpc3QiLCJhZGQiLCJhZGRDb21wbGV0ZUJ1dHRvbiIsImNyZWF0ZU5ld1Byb2plY3QiLCJnZXRUYXNrRGl2SWQiLCJpc1Rhc2tDb21wbGV0ZWQiLCJjb21wbGV0ZUJ1dHRvbiIsImlubmVySFRNTCIsImFkZEV2ZW50TGlzdGVuZXIiLCJhZGREZWxldGVCdXR0b24iLCJ0YXNrRGl2IiwiZGVsZXRlVGFza0J1dHRvbiIsImFkZEVkaXRCdXR0b24iLCJ0YXNrQnV0dG9uRGl2IiwiZWRpdFRhc2tCdXR0b24iLCJlZGl0VGFza05hbWUiLCJwcm9tcHQiLCJjcmVhdGVUYXNrIiwiZGF0YUNvdW50ZXIiLCJ0YXNrQ291bnRlciIsImFkZFRhc2tGb3JtIiwiYWRkTGFiZWwiLCJhZGRQcmlvRm9ybSIsIm9wdGlvbnNIaWdoIiwib3B0aW9uc1RleHRIaWdoIiwib3B0aW9uc01lZCIsIm9wdGlvbnNUZXh0TWVkIiwib3B0aW9uc0xvdyIsIm9wdGlvbnNUZXh0TG93IiwiYWRkTGFiZWxQcmlvIiwiYWRkVGFza0R1ZURhdGVGb3JtIiwiYWRkVGFza0R1ZURhdGVMYWJlbCIsImFkZEJ1dHRvbiIsInRhc2tPcHRpb25zRGl2IiwidGFza1ZhbHVlIiwicHJpb1ZhbHVlIiwiZHVlRGF0ZVZhbHVlIiwiYWxlcnQiLCJzdG9yZVRhc2siLCJzdG9yZVRhc2tzIiwiZGF0YXNldCIsImRlbGV0ZUJ1dHRvbiIsImVkaXRCdXR0b24iLCJkaXNwbGF5UHJvamVjdEZyb21TdG9yYWdlIiwidGhlTmFtZUlzIiwibG9jYWxzIiwiZ2V0RWxlbWVudEJ5SWQiLCJwcm9qZWN0TmFtZUZvcm0iLCJzdWJCdXR0b24iLCJvbmxvYWQiLCJkZWZhdWx0UHJvamVjdCIsInNldERlZmF1bHRQcm9qZWN0IiwiZm9yRWFjaCIsInN0b3JlZFByb2plY3QiLCJwcm9qZWN0SW5zdGFuY2UiLCJwcm9qZWN0TmFtZURpdiIsInByb2plY3RIZWFkbGluZURpdiIsInByb2plY3RCdXR0b25zRGl2IiwicHJvamVjdEgzIiwicmVtb3ZlUHJvamVjdEJ0biIsImVkaXRQcm9qZWN0QnRuIiwiZGlzcGxheVByb2plY3QiLCJwcm9qZWN0IiwiZmluZCIsInByb2plY3RPYmoiLCJzdG9yZVByb2plY3QiXSwic291cmNlUm9vdCI6IiJ9