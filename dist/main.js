(()=>{"use strict";class e{constructor(e){this.projectName=e,this.task=[]}addTask(e){this.task.push(e)}}const t=document.createElement("div"),n=document.getElementById("content"),d=document.getElementById("projectName"),i=document.getElementById("submit");let o=[];i.addEventListener("click",(()=>{const i=document.createElement("div");i.setAttribute("id","projectNameDiv");const a=d.value;let c=new e(a);o.push(c),i.innerHTML=a,function(e){const n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("name","setProperty"),n.setAttribute("id","setProperty");const d=document.createElement("label");d.setAttribute("for","setProperty"),d.innerHTML="Task Name:",t.setAttribute("id","taskDiv");const i=document.createElement("select");i.setAttribute("name","setPrio"),i.setAttribute("id","setPrio");const o=document.createElement("option");o.setAttribute("value","high");const a=document.createTextNode("High"),c=document.createElement("option");c.setAttribute("value","medium");const s=document.createTextNode("Medium"),r=document.createElement("option");r.setAttribute("value","low");const u=document.createTextNode("Low");o.appendChild(a),c.appendChild(s),r.appendChild(u),i.appendChild(o),i.appendChild(c),i.appendChild(r);const l=document.createElement("label");l.setAttribute("for","setPrio"),l.innerHTML="Add Priority";const p=document.createElement("input");p.setAttribute("type","date"),p.setAttribute("name","taskDueDate"),p.setAttribute("id","taskDueDate");const m=document.createElement("label");m.setAttribute("for","taskDueDate"),m.innerHTML="Due: ";const h=document.createElement("button");h.innerHTML="add",h.addEventListener("click",(()=>{const t=n.value,d=i.value,o=p.value;e.addTask({description:t,priority:d,dueDate:o}),console.log(e),n.value=""})),t.appendChild(d),t.appendChild(n),t.appendChild(l),t.appendChild(i),t.appendChild(m),t.appendChild(p),t.appendChild(h)}(c),n.appendChild(i),i.appendChild(t),d.value="",console.log(c)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,